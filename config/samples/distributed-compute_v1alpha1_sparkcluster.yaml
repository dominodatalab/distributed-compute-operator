apiVersion: distributed-compute.dominodatalab.com/v1alpha1
kind: SparkCluster
metadata:
  name: example
spec:
  workerMemoryLimit: 100m

  # envoyFilterLabels: {}
  # clusterPort: 7077
  # masterWebPort: 8080
  # workerWebPort: 8081

  # image:
  #   registry: ""
  #   repository: bitnami/spark
  #   tag: 3.0.2-debian-10-r0
  #   pullPolicy: IfNotPresent

  # autoscaling:
  #   minReplicas:
  #   maxReplicas:
  #   averageCPUUtilization:
  #   averageMemoryUtilization:
  #   scaleDownStabilizationWindowSeconds:

  # networkPolicy:
  #   enabled: true
  #   clientLabels: {}
  #   dashboardLabels: {}

  # serviceAccount:
  #   name: ""
  #   automountServiceAccountToken: false

  # podSecurityContext:
  #   runAsUser:
  #   runAsGroup:
  #   fsGroup:

  # kerberosKeytab:
  #   contents:
  #   mountPath:

  # globalLabels: {}
  # envVars: []
  # imagePullSecrets: []
  # podSecurityPolicy: ""
  # istioMutualTLSMode: ""

  master:
    # defaultConfiguration:
    #   spark.driver.host: "driver-service.ns.svc.cluster.local"
    #   spark.executor.cores: "4"
    #   spark.executor.instances: "1"
    #   spark.executor.memory: 15360m
    #   spark.ui.proxyBase: "/master/proxy/url"
    #   spark.ui.reverseProxy: "true"
    #   spark.ui.reverseProxyUrl: "/master/proxy/base"
    # labels: {}
    # annotations: {}
    # nodeSelector: {}
    # affinity: {}
    # tolerations: []
    # initContainers: []
    # volumes: []
    # volumeMounts: []
    # volumeClaimTemplates: []
    resources:
      requests:
        cpu: 100m
        memory: 250Mi

  worker:
    # defaultConfiguration:
    #   spark.driver.host: "driver-svc.ns.svc.cluster.local"
    #   spark.executor.cores: "4"
    #   spark.executor.instances: "1"
    #   spark.executor.memory: 15360m
    #   spark.ui.proxyBase: "/worker/proxy/base"
    #   spark.ui.reverseProxy: "true"
    #   spark.ui.reverseProxyUrl: "/worker/proxy/url"
    # replicas: 1
    # labels: {}
    # annotations: {}
    # nodeSelector: {}
    # affinity: {}
    # tolerations: []
    # initContainers: []
    # volumes: []
    # volumeMounts: []
    # volumeClaimTemplates: []
    resources:
      requests:
        cpu: 1
        memory: 250Mi

  driver:
    # port: 4041
    # uiPort: 4040
    # blockManagerPort: 4042
    selector:
      app.kubernetes.io/instance: driver-pod
