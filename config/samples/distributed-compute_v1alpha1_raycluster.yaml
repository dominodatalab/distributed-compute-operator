apiVersion: distributed-compute.dominodatalab.com/v1alpha1
kind: RayCluster
metadata:
  name: example
spec:
  # redis port and addition redis shard ports used by head node
  # port: 1234
  # redisShardPorts:
  # - 6380
  # - 6381

  # additionalClientPorts:
  #   - name: http-api-proxy
  #     port: 8899
  #     targetPort: 8899
  #     protocol: TCP

  # port used to connect clients to ray
  # clientServerPort: 10001

  # enable dashboard ui and set port
  # dashboardPort: 8265
  # enableDashboard: true

  # set the object store's port and initial memory
  # objectManagerPort: 2384
  # objectStoreMemoryBytes: 52428800

  # internal port overrides
  # nodeManagerPort: 2385
  # gcsServerPort: 2386
  # workerPorts:
  # - 12000
  # - 12001
  # - 12002
  # - 12003
  # - 12004

  # image:
  #   registry: ""
  #   repository: rayproject/ray
  #   tag: nightly
  #   pullPolicy: IfNotPresent

  # autoscaling:
  #   minReplicas:
  #   maxReplicas:
  #   averageCPUUtilization:
  #   averageMemoryUtilization:
  #   scaleDownStabilizationWindowSeconds:

  # networkPolicy:
  #   enabled: true
  #   clientLabels: {}
  #   dashboardLabels: {}
  #   dashboardNamespaceLabels: {}

  # serviceAccount:
  #   name: ""
  #   automountServiceAccountToken: false

  # podSecurityContext:
  #   runAsUser:
  #   runAsGroup:
  #   fsGroup:

  # kerberosKeytab:
  #   contents:
  #   mountPath:

  # globalLabels: {}
  # envVars: []
  # imagePullSecrets: []
  # podSecurityPolicy: ""
  # istioMutualTLSMode: ""

  head:
    # labels: {}
    # annotations: {}
    # nodeSelector: {}
    # affinity: {}
    # tolerations: []
    # initContainers: []
    # volumes: []
    # volumeMounts: []
    # volumeClaimTemplates: []
    # resources: {}

  worker:
    # replicas: 2
    # labels: {}
    # annotations: {}
    # nodeSelector: {}
    # affinity: {}
    # tolerations: []
    # initContainers: []
    # volumes: []
    # volumeMounts: []
    # volumeClaimTemplates: []
    resources:
      requests:
        cpu: 100m
        memory: 250Mi
