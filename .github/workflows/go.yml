name: Go

on:
  push:
    branches: [ main ]
    tags: [ "v\d+(\.\d+)*(-.*)*" ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Cache go modules and build data
      uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Cache build tools
      uses: actions/cache@v2
      with:
        path: |
          bin
          testbin
        key: ${{ runner.os }}-go-${{ hashFiles('Makefile') }}

    - name: Build
      run: make build

    - name: Test
      run: make test

      # TODO: research golangci github action
    - name: Lint
      run: make lint

    - name: Upload coverage report
      uses: codecov/codecov-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Github Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}

    - name: Docker prepare
      id: docker_prep
      run: |
        DOCKER_IMAGE=ghcr.io/${{ github.repository }}

        VERSION=edge
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=pr-${{ github.event.number }}
        fi

        TAGS="${DOCKER_IMAGE}:${VERSION}"
        if [[ "${{ github.event_name }}" == "push" ]]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
        fi

        echo ::set-output name=image::${DOCKER_IMAGE}
        echo ::set-output name=version::${VERSION}
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

    - name: Build and push Docker image
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.prep.outputs.tags }}
        cache-to: type=registry,ref=${{ steps.docker_prep.outputs.image }}:buildcache,mode=max
        cache-from: type=registry,ref=${{ steps.docker_prep.outputs.image }}:buildcache
        labels: |
          org.opencontainers.image.title=${{ github.event.repository.name }}
          org.opencontainers.image.description=${{ github.event.repository.description }}
          org.opencontainers.image.url=${{ github.event.repository.html_url }}
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
          org.opencontainers.image.version=${{ steps.docker_prep.outputs.version }}
          org.opencontainers.image.created=${{ steps.docker_prep.outputs.created }}
