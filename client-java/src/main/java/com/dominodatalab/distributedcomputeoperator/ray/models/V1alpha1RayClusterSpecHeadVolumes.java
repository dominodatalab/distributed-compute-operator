/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dominodatalab.distributedcomputeoperator.ray.models;

import java.util.Objects;
import java.util.Arrays;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadAwsElasticBlockStore;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadAzureDisk;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadAzureFile;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadCephfs;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadCinder;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadConfigMap;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadCsi;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadDownwardAPI;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadEmptyDir;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadEphemeral;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadFc;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadFlexVolume;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadFlocker;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadGcePersistentDisk;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadGitRepo;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadGlusterfs;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadHostPath;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadIscsi;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadNfs;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadPersistentVolumeClaim;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadPhotonPersistentDisk;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadPortworxVolume;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadProjected;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadQuobyte;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadRbd;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadScaleIO;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadSecret;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadStorageos;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadVsphereVolume;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1alpha1RayClusterSpecHeadVolumes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-04T16:37:47.111Z[Etc/UTC]")
public class V1alpha1RayClusterSpecHeadVolumes {
  public static final String SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE = "awsElasticBlockStore";
  @SerializedName(SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE)
  private V1alpha1RayClusterSpecHeadAwsElasticBlockStore awsElasticBlockStore;

  public static final String SERIALIZED_NAME_AZURE_DISK = "azureDisk";
  @SerializedName(SERIALIZED_NAME_AZURE_DISK)
  private V1alpha1RayClusterSpecHeadAzureDisk azureDisk;

  public static final String SERIALIZED_NAME_AZURE_FILE = "azureFile";
  @SerializedName(SERIALIZED_NAME_AZURE_FILE)
  private V1alpha1RayClusterSpecHeadAzureFile azureFile;

  public static final String SERIALIZED_NAME_CEPHFS = "cephfs";
  @SerializedName(SERIALIZED_NAME_CEPHFS)
  private V1alpha1RayClusterSpecHeadCephfs cephfs;

  public static final String SERIALIZED_NAME_CINDER = "cinder";
  @SerializedName(SERIALIZED_NAME_CINDER)
  private V1alpha1RayClusterSpecHeadCinder cinder;

  public static final String SERIALIZED_NAME_CONFIG_MAP = "configMap";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAP)
  private V1alpha1RayClusterSpecHeadConfigMap configMap;

  public static final String SERIALIZED_NAME_CSI = "csi";
  @SerializedName(SERIALIZED_NAME_CSI)
  private V1alpha1RayClusterSpecHeadCsi csi;

  public static final String SERIALIZED_NAME_DOWNWARD_A_P_I = "downwardAPI";
  @SerializedName(SERIALIZED_NAME_DOWNWARD_A_P_I)
  private V1alpha1RayClusterSpecHeadDownwardAPI downwardAPI;

  public static final String SERIALIZED_NAME_EMPTY_DIR = "emptyDir";
  @SerializedName(SERIALIZED_NAME_EMPTY_DIR)
  private V1alpha1RayClusterSpecHeadEmptyDir emptyDir;

  public static final String SERIALIZED_NAME_EPHEMERAL = "ephemeral";
  @SerializedName(SERIALIZED_NAME_EPHEMERAL)
  private V1alpha1RayClusterSpecHeadEphemeral ephemeral;

  public static final String SERIALIZED_NAME_FC = "fc";
  @SerializedName(SERIALIZED_NAME_FC)
  private V1alpha1RayClusterSpecHeadFc fc;

  public static final String SERIALIZED_NAME_FLEX_VOLUME = "flexVolume";
  @SerializedName(SERIALIZED_NAME_FLEX_VOLUME)
  private V1alpha1RayClusterSpecHeadFlexVolume flexVolume;

  public static final String SERIALIZED_NAME_FLOCKER = "flocker";
  @SerializedName(SERIALIZED_NAME_FLOCKER)
  private V1alpha1RayClusterSpecHeadFlocker flocker;

  public static final String SERIALIZED_NAME_GCE_PERSISTENT_DISK = "gcePersistentDisk";
  @SerializedName(SERIALIZED_NAME_GCE_PERSISTENT_DISK)
  private V1alpha1RayClusterSpecHeadGcePersistentDisk gcePersistentDisk;

  public static final String SERIALIZED_NAME_GIT_REPO = "gitRepo";
  @SerializedName(SERIALIZED_NAME_GIT_REPO)
  private V1alpha1RayClusterSpecHeadGitRepo gitRepo;

  public static final String SERIALIZED_NAME_GLUSTERFS = "glusterfs";
  @SerializedName(SERIALIZED_NAME_GLUSTERFS)
  private V1alpha1RayClusterSpecHeadGlusterfs glusterfs;

  public static final String SERIALIZED_NAME_HOST_PATH = "hostPath";
  @SerializedName(SERIALIZED_NAME_HOST_PATH)
  private V1alpha1RayClusterSpecHeadHostPath hostPath;

  public static final String SERIALIZED_NAME_ISCSI = "iscsi";
  @SerializedName(SERIALIZED_NAME_ISCSI)
  private V1alpha1RayClusterSpecHeadIscsi iscsi;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NFS = "nfs";
  @SerializedName(SERIALIZED_NAME_NFS)
  private V1alpha1RayClusterSpecHeadNfs nfs;

  public static final String SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM = "persistentVolumeClaim";
  @SerializedName(SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM)
  private V1alpha1RayClusterSpecHeadPersistentVolumeClaim persistentVolumeClaim;

  public static final String SERIALIZED_NAME_PHOTON_PERSISTENT_DISK = "photonPersistentDisk";
  @SerializedName(SERIALIZED_NAME_PHOTON_PERSISTENT_DISK)
  private V1alpha1RayClusterSpecHeadPhotonPersistentDisk photonPersistentDisk;

  public static final String SERIALIZED_NAME_PORTWORX_VOLUME = "portworxVolume";
  @SerializedName(SERIALIZED_NAME_PORTWORX_VOLUME)
  private V1alpha1RayClusterSpecHeadPortworxVolume portworxVolume;

  public static final String SERIALIZED_NAME_PROJECTED = "projected";
  @SerializedName(SERIALIZED_NAME_PROJECTED)
  private V1alpha1RayClusterSpecHeadProjected projected;

  public static final String SERIALIZED_NAME_QUOBYTE = "quobyte";
  @SerializedName(SERIALIZED_NAME_QUOBYTE)
  private V1alpha1RayClusterSpecHeadQuobyte quobyte;

  public static final String SERIALIZED_NAME_RBD = "rbd";
  @SerializedName(SERIALIZED_NAME_RBD)
  private V1alpha1RayClusterSpecHeadRbd rbd;

  public static final String SERIALIZED_NAME_SCALE_I_O = "scaleIO";
  @SerializedName(SERIALIZED_NAME_SCALE_I_O)
  private V1alpha1RayClusterSpecHeadScaleIO scaleIO;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private V1alpha1RayClusterSpecHeadSecret secret;

  public static final String SERIALIZED_NAME_STORAGEOS = "storageos";
  @SerializedName(SERIALIZED_NAME_STORAGEOS)
  private V1alpha1RayClusterSpecHeadStorageos storageos;

  public static final String SERIALIZED_NAME_VSPHERE_VOLUME = "vsphereVolume";
  @SerializedName(SERIALIZED_NAME_VSPHERE_VOLUME)
  private V1alpha1RayClusterSpecHeadVsphereVolume vsphereVolume;


  public V1alpha1RayClusterSpecHeadVolumes awsElasticBlockStore(V1alpha1RayClusterSpecHeadAwsElasticBlockStore awsElasticBlockStore) {
    
    this.awsElasticBlockStore = awsElasticBlockStore;
    return this;
  }

   /**
   * Get awsElasticBlockStore
   * @return awsElasticBlockStore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadAwsElasticBlockStore getAwsElasticBlockStore() {
    return awsElasticBlockStore;
  }


  public void setAwsElasticBlockStore(V1alpha1RayClusterSpecHeadAwsElasticBlockStore awsElasticBlockStore) {
    this.awsElasticBlockStore = awsElasticBlockStore;
  }


  public V1alpha1RayClusterSpecHeadVolumes azureDisk(V1alpha1RayClusterSpecHeadAzureDisk azureDisk) {
    
    this.azureDisk = azureDisk;
    return this;
  }

   /**
   * Get azureDisk
   * @return azureDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadAzureDisk getAzureDisk() {
    return azureDisk;
  }


  public void setAzureDisk(V1alpha1RayClusterSpecHeadAzureDisk azureDisk) {
    this.azureDisk = azureDisk;
  }


  public V1alpha1RayClusterSpecHeadVolumes azureFile(V1alpha1RayClusterSpecHeadAzureFile azureFile) {
    
    this.azureFile = azureFile;
    return this;
  }

   /**
   * Get azureFile
   * @return azureFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadAzureFile getAzureFile() {
    return azureFile;
  }


  public void setAzureFile(V1alpha1RayClusterSpecHeadAzureFile azureFile) {
    this.azureFile = azureFile;
  }


  public V1alpha1RayClusterSpecHeadVolumes cephfs(V1alpha1RayClusterSpecHeadCephfs cephfs) {
    
    this.cephfs = cephfs;
    return this;
  }

   /**
   * Get cephfs
   * @return cephfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadCephfs getCephfs() {
    return cephfs;
  }


  public void setCephfs(V1alpha1RayClusterSpecHeadCephfs cephfs) {
    this.cephfs = cephfs;
  }


  public V1alpha1RayClusterSpecHeadVolumes cinder(V1alpha1RayClusterSpecHeadCinder cinder) {
    
    this.cinder = cinder;
    return this;
  }

   /**
   * Get cinder
   * @return cinder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadCinder getCinder() {
    return cinder;
  }


  public void setCinder(V1alpha1RayClusterSpecHeadCinder cinder) {
    this.cinder = cinder;
  }


  public V1alpha1RayClusterSpecHeadVolumes configMap(V1alpha1RayClusterSpecHeadConfigMap configMap) {
    
    this.configMap = configMap;
    return this;
  }

   /**
   * Get configMap
   * @return configMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadConfigMap getConfigMap() {
    return configMap;
  }


  public void setConfigMap(V1alpha1RayClusterSpecHeadConfigMap configMap) {
    this.configMap = configMap;
  }


  public V1alpha1RayClusterSpecHeadVolumes csi(V1alpha1RayClusterSpecHeadCsi csi) {
    
    this.csi = csi;
    return this;
  }

   /**
   * Get csi
   * @return csi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadCsi getCsi() {
    return csi;
  }


  public void setCsi(V1alpha1RayClusterSpecHeadCsi csi) {
    this.csi = csi;
  }


  public V1alpha1RayClusterSpecHeadVolumes downwardAPI(V1alpha1RayClusterSpecHeadDownwardAPI downwardAPI) {
    
    this.downwardAPI = downwardAPI;
    return this;
  }

   /**
   * Get downwardAPI
   * @return downwardAPI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadDownwardAPI getDownwardAPI() {
    return downwardAPI;
  }


  public void setDownwardAPI(V1alpha1RayClusterSpecHeadDownwardAPI downwardAPI) {
    this.downwardAPI = downwardAPI;
  }


  public V1alpha1RayClusterSpecHeadVolumes emptyDir(V1alpha1RayClusterSpecHeadEmptyDir emptyDir) {
    
    this.emptyDir = emptyDir;
    return this;
  }

   /**
   * Get emptyDir
   * @return emptyDir
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadEmptyDir getEmptyDir() {
    return emptyDir;
  }


  public void setEmptyDir(V1alpha1RayClusterSpecHeadEmptyDir emptyDir) {
    this.emptyDir = emptyDir;
  }


  public V1alpha1RayClusterSpecHeadVolumes ephemeral(V1alpha1RayClusterSpecHeadEphemeral ephemeral) {
    
    this.ephemeral = ephemeral;
    return this;
  }

   /**
   * Get ephemeral
   * @return ephemeral
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadEphemeral getEphemeral() {
    return ephemeral;
  }


  public void setEphemeral(V1alpha1RayClusterSpecHeadEphemeral ephemeral) {
    this.ephemeral = ephemeral;
  }


  public V1alpha1RayClusterSpecHeadVolumes fc(V1alpha1RayClusterSpecHeadFc fc) {
    
    this.fc = fc;
    return this;
  }

   /**
   * Get fc
   * @return fc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadFc getFc() {
    return fc;
  }


  public void setFc(V1alpha1RayClusterSpecHeadFc fc) {
    this.fc = fc;
  }


  public V1alpha1RayClusterSpecHeadVolumes flexVolume(V1alpha1RayClusterSpecHeadFlexVolume flexVolume) {
    
    this.flexVolume = flexVolume;
    return this;
  }

   /**
   * Get flexVolume
   * @return flexVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadFlexVolume getFlexVolume() {
    return flexVolume;
  }


  public void setFlexVolume(V1alpha1RayClusterSpecHeadFlexVolume flexVolume) {
    this.flexVolume = flexVolume;
  }


  public V1alpha1RayClusterSpecHeadVolumes flocker(V1alpha1RayClusterSpecHeadFlocker flocker) {
    
    this.flocker = flocker;
    return this;
  }

   /**
   * Get flocker
   * @return flocker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadFlocker getFlocker() {
    return flocker;
  }


  public void setFlocker(V1alpha1RayClusterSpecHeadFlocker flocker) {
    this.flocker = flocker;
  }


  public V1alpha1RayClusterSpecHeadVolumes gcePersistentDisk(V1alpha1RayClusterSpecHeadGcePersistentDisk gcePersistentDisk) {
    
    this.gcePersistentDisk = gcePersistentDisk;
    return this;
  }

   /**
   * Get gcePersistentDisk
   * @return gcePersistentDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadGcePersistentDisk getGcePersistentDisk() {
    return gcePersistentDisk;
  }


  public void setGcePersistentDisk(V1alpha1RayClusterSpecHeadGcePersistentDisk gcePersistentDisk) {
    this.gcePersistentDisk = gcePersistentDisk;
  }


  public V1alpha1RayClusterSpecHeadVolumes gitRepo(V1alpha1RayClusterSpecHeadGitRepo gitRepo) {
    
    this.gitRepo = gitRepo;
    return this;
  }

   /**
   * Get gitRepo
   * @return gitRepo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadGitRepo getGitRepo() {
    return gitRepo;
  }


  public void setGitRepo(V1alpha1RayClusterSpecHeadGitRepo gitRepo) {
    this.gitRepo = gitRepo;
  }


  public V1alpha1RayClusterSpecHeadVolumes glusterfs(V1alpha1RayClusterSpecHeadGlusterfs glusterfs) {
    
    this.glusterfs = glusterfs;
    return this;
  }

   /**
   * Get glusterfs
   * @return glusterfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadGlusterfs getGlusterfs() {
    return glusterfs;
  }


  public void setGlusterfs(V1alpha1RayClusterSpecHeadGlusterfs glusterfs) {
    this.glusterfs = glusterfs;
  }


  public V1alpha1RayClusterSpecHeadVolumes hostPath(V1alpha1RayClusterSpecHeadHostPath hostPath) {
    
    this.hostPath = hostPath;
    return this;
  }

   /**
   * Get hostPath
   * @return hostPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadHostPath getHostPath() {
    return hostPath;
  }


  public void setHostPath(V1alpha1RayClusterSpecHeadHostPath hostPath) {
    this.hostPath = hostPath;
  }


  public V1alpha1RayClusterSpecHeadVolumes iscsi(V1alpha1RayClusterSpecHeadIscsi iscsi) {
    
    this.iscsi = iscsi;
    return this;
  }

   /**
   * Get iscsi
   * @return iscsi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadIscsi getIscsi() {
    return iscsi;
  }


  public void setIscsi(V1alpha1RayClusterSpecHeadIscsi iscsi) {
    this.iscsi = iscsi;
  }


  public V1alpha1RayClusterSpecHeadVolumes name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1alpha1RayClusterSpecHeadVolumes nfs(V1alpha1RayClusterSpecHeadNfs nfs) {
    
    this.nfs = nfs;
    return this;
  }

   /**
   * Get nfs
   * @return nfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadNfs getNfs() {
    return nfs;
  }


  public void setNfs(V1alpha1RayClusterSpecHeadNfs nfs) {
    this.nfs = nfs;
  }


  public V1alpha1RayClusterSpecHeadVolumes persistentVolumeClaim(V1alpha1RayClusterSpecHeadPersistentVolumeClaim persistentVolumeClaim) {
    
    this.persistentVolumeClaim = persistentVolumeClaim;
    return this;
  }

   /**
   * Get persistentVolumeClaim
   * @return persistentVolumeClaim
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadPersistentVolumeClaim getPersistentVolumeClaim() {
    return persistentVolumeClaim;
  }


  public void setPersistentVolumeClaim(V1alpha1RayClusterSpecHeadPersistentVolumeClaim persistentVolumeClaim) {
    this.persistentVolumeClaim = persistentVolumeClaim;
  }


  public V1alpha1RayClusterSpecHeadVolumes photonPersistentDisk(V1alpha1RayClusterSpecHeadPhotonPersistentDisk photonPersistentDisk) {
    
    this.photonPersistentDisk = photonPersistentDisk;
    return this;
  }

   /**
   * Get photonPersistentDisk
   * @return photonPersistentDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadPhotonPersistentDisk getPhotonPersistentDisk() {
    return photonPersistentDisk;
  }


  public void setPhotonPersistentDisk(V1alpha1RayClusterSpecHeadPhotonPersistentDisk photonPersistentDisk) {
    this.photonPersistentDisk = photonPersistentDisk;
  }


  public V1alpha1RayClusterSpecHeadVolumes portworxVolume(V1alpha1RayClusterSpecHeadPortworxVolume portworxVolume) {
    
    this.portworxVolume = portworxVolume;
    return this;
  }

   /**
   * Get portworxVolume
   * @return portworxVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadPortworxVolume getPortworxVolume() {
    return portworxVolume;
  }


  public void setPortworxVolume(V1alpha1RayClusterSpecHeadPortworxVolume portworxVolume) {
    this.portworxVolume = portworxVolume;
  }


  public V1alpha1RayClusterSpecHeadVolumes projected(V1alpha1RayClusterSpecHeadProjected projected) {
    
    this.projected = projected;
    return this;
  }

   /**
   * Get projected
   * @return projected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadProjected getProjected() {
    return projected;
  }


  public void setProjected(V1alpha1RayClusterSpecHeadProjected projected) {
    this.projected = projected;
  }


  public V1alpha1RayClusterSpecHeadVolumes quobyte(V1alpha1RayClusterSpecHeadQuobyte quobyte) {
    
    this.quobyte = quobyte;
    return this;
  }

   /**
   * Get quobyte
   * @return quobyte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadQuobyte getQuobyte() {
    return quobyte;
  }


  public void setQuobyte(V1alpha1RayClusterSpecHeadQuobyte quobyte) {
    this.quobyte = quobyte;
  }


  public V1alpha1RayClusterSpecHeadVolumes rbd(V1alpha1RayClusterSpecHeadRbd rbd) {
    
    this.rbd = rbd;
    return this;
  }

   /**
   * Get rbd
   * @return rbd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadRbd getRbd() {
    return rbd;
  }


  public void setRbd(V1alpha1RayClusterSpecHeadRbd rbd) {
    this.rbd = rbd;
  }


  public V1alpha1RayClusterSpecHeadVolumes scaleIO(V1alpha1RayClusterSpecHeadScaleIO scaleIO) {
    
    this.scaleIO = scaleIO;
    return this;
  }

   /**
   * Get scaleIO
   * @return scaleIO
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadScaleIO getScaleIO() {
    return scaleIO;
  }


  public void setScaleIO(V1alpha1RayClusterSpecHeadScaleIO scaleIO) {
    this.scaleIO = scaleIO;
  }


  public V1alpha1RayClusterSpecHeadVolumes secret(V1alpha1RayClusterSpecHeadSecret secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadSecret getSecret() {
    return secret;
  }


  public void setSecret(V1alpha1RayClusterSpecHeadSecret secret) {
    this.secret = secret;
  }


  public V1alpha1RayClusterSpecHeadVolumes storageos(V1alpha1RayClusterSpecHeadStorageos storageos) {
    
    this.storageos = storageos;
    return this;
  }

   /**
   * Get storageos
   * @return storageos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadStorageos getStorageos() {
    return storageos;
  }


  public void setStorageos(V1alpha1RayClusterSpecHeadStorageos storageos) {
    this.storageos = storageos;
  }


  public V1alpha1RayClusterSpecHeadVolumes vsphereVolume(V1alpha1RayClusterSpecHeadVsphereVolume vsphereVolume) {
    
    this.vsphereVolume = vsphereVolume;
    return this;
  }

   /**
   * Get vsphereVolume
   * @return vsphereVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHeadVsphereVolume getVsphereVolume() {
    return vsphereVolume;
  }


  public void setVsphereVolume(V1alpha1RayClusterSpecHeadVsphereVolume vsphereVolume) {
    this.vsphereVolume = vsphereVolume;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1RayClusterSpecHeadVolumes v1alpha1RayClusterSpecHeadVolumes = (V1alpha1RayClusterSpecHeadVolumes) o;
    return Objects.equals(this.awsElasticBlockStore, v1alpha1RayClusterSpecHeadVolumes.awsElasticBlockStore) &&
        Objects.equals(this.azureDisk, v1alpha1RayClusterSpecHeadVolumes.azureDisk) &&
        Objects.equals(this.azureFile, v1alpha1RayClusterSpecHeadVolumes.azureFile) &&
        Objects.equals(this.cephfs, v1alpha1RayClusterSpecHeadVolumes.cephfs) &&
        Objects.equals(this.cinder, v1alpha1RayClusterSpecHeadVolumes.cinder) &&
        Objects.equals(this.configMap, v1alpha1RayClusterSpecHeadVolumes.configMap) &&
        Objects.equals(this.csi, v1alpha1RayClusterSpecHeadVolumes.csi) &&
        Objects.equals(this.downwardAPI, v1alpha1RayClusterSpecHeadVolumes.downwardAPI) &&
        Objects.equals(this.emptyDir, v1alpha1RayClusterSpecHeadVolumes.emptyDir) &&
        Objects.equals(this.ephemeral, v1alpha1RayClusterSpecHeadVolumes.ephemeral) &&
        Objects.equals(this.fc, v1alpha1RayClusterSpecHeadVolumes.fc) &&
        Objects.equals(this.flexVolume, v1alpha1RayClusterSpecHeadVolumes.flexVolume) &&
        Objects.equals(this.flocker, v1alpha1RayClusterSpecHeadVolumes.flocker) &&
        Objects.equals(this.gcePersistentDisk, v1alpha1RayClusterSpecHeadVolumes.gcePersistentDisk) &&
        Objects.equals(this.gitRepo, v1alpha1RayClusterSpecHeadVolumes.gitRepo) &&
        Objects.equals(this.glusterfs, v1alpha1RayClusterSpecHeadVolumes.glusterfs) &&
        Objects.equals(this.hostPath, v1alpha1RayClusterSpecHeadVolumes.hostPath) &&
        Objects.equals(this.iscsi, v1alpha1RayClusterSpecHeadVolumes.iscsi) &&
        Objects.equals(this.name, v1alpha1RayClusterSpecHeadVolumes.name) &&
        Objects.equals(this.nfs, v1alpha1RayClusterSpecHeadVolumes.nfs) &&
        Objects.equals(this.persistentVolumeClaim, v1alpha1RayClusterSpecHeadVolumes.persistentVolumeClaim) &&
        Objects.equals(this.photonPersistentDisk, v1alpha1RayClusterSpecHeadVolumes.photonPersistentDisk) &&
        Objects.equals(this.portworxVolume, v1alpha1RayClusterSpecHeadVolumes.portworxVolume) &&
        Objects.equals(this.projected, v1alpha1RayClusterSpecHeadVolumes.projected) &&
        Objects.equals(this.quobyte, v1alpha1RayClusterSpecHeadVolumes.quobyte) &&
        Objects.equals(this.rbd, v1alpha1RayClusterSpecHeadVolumes.rbd) &&
        Objects.equals(this.scaleIO, v1alpha1RayClusterSpecHeadVolumes.scaleIO) &&
        Objects.equals(this.secret, v1alpha1RayClusterSpecHeadVolumes.secret) &&
        Objects.equals(this.storageos, v1alpha1RayClusterSpecHeadVolumes.storageos) &&
        Objects.equals(this.vsphereVolume, v1alpha1RayClusterSpecHeadVolumes.vsphereVolume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsElasticBlockStore, azureDisk, azureFile, cephfs, cinder, configMap, csi, downwardAPI, emptyDir, ephemeral, fc, flexVolume, flocker, gcePersistentDisk, gitRepo, glusterfs, hostPath, iscsi, name, nfs, persistentVolumeClaim, photonPersistentDisk, portworxVolume, projected, quobyte, rbd, scaleIO, secret, storageos, vsphereVolume);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1RayClusterSpecHeadVolumes {\n");
    sb.append("    awsElasticBlockStore: ").append(toIndentedString(awsElasticBlockStore)).append("\n");
    sb.append("    azureDisk: ").append(toIndentedString(azureDisk)).append("\n");
    sb.append("    azureFile: ").append(toIndentedString(azureFile)).append("\n");
    sb.append("    cephfs: ").append(toIndentedString(cephfs)).append("\n");
    sb.append("    cinder: ").append(toIndentedString(cinder)).append("\n");
    sb.append("    configMap: ").append(toIndentedString(configMap)).append("\n");
    sb.append("    csi: ").append(toIndentedString(csi)).append("\n");
    sb.append("    downwardAPI: ").append(toIndentedString(downwardAPI)).append("\n");
    sb.append("    emptyDir: ").append(toIndentedString(emptyDir)).append("\n");
    sb.append("    ephemeral: ").append(toIndentedString(ephemeral)).append("\n");
    sb.append("    fc: ").append(toIndentedString(fc)).append("\n");
    sb.append("    flexVolume: ").append(toIndentedString(flexVolume)).append("\n");
    sb.append("    flocker: ").append(toIndentedString(flocker)).append("\n");
    sb.append("    gcePersistentDisk: ").append(toIndentedString(gcePersistentDisk)).append("\n");
    sb.append("    gitRepo: ").append(toIndentedString(gitRepo)).append("\n");
    sb.append("    glusterfs: ").append(toIndentedString(glusterfs)).append("\n");
    sb.append("    hostPath: ").append(toIndentedString(hostPath)).append("\n");
    sb.append("    iscsi: ").append(toIndentedString(iscsi)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nfs: ").append(toIndentedString(nfs)).append("\n");
    sb.append("    persistentVolumeClaim: ").append(toIndentedString(persistentVolumeClaim)).append("\n");
    sb.append("    photonPersistentDisk: ").append(toIndentedString(photonPersistentDisk)).append("\n");
    sb.append("    portworxVolume: ").append(toIndentedString(portworxVolume)).append("\n");
    sb.append("    projected: ").append(toIndentedString(projected)).append("\n");
    sb.append("    quobyte: ").append(toIndentedString(quobyte)).append("\n");
    sb.append("    rbd: ").append(toIndentedString(rbd)).append("\n");
    sb.append("    scaleIO: ").append(toIndentedString(scaleIO)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    storageos: ").append(toIndentedString(storageos)).append("\n");
    sb.append("    vsphereVolume: ").append(toIndentedString(vsphereVolume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

