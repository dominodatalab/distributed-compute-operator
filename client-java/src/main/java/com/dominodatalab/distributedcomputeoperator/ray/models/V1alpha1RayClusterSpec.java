/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dominodatalab.distributedcomputeoperator.ray.models;

import java.util.Objects;
import java.util.Arrays;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecAutoscaling;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecEnvVars;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHead;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecHeadCephfsSecretRef;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecImage;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecKerberosKeytab;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecNetworkPolicy;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecPodSecurityContext;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecServiceAccount;
import com.dominodatalab.distributedcomputeoperator.ray.models.V1alpha1RayClusterSpecWorker;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * V1alpha1RayClusterSpec
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-04T16:37:47.111Z[Etc/UTC]")
public class V1alpha1RayClusterSpec {
  public static final String SERIALIZED_NAME_AUTOSCALING = "autoscaling";
  @SerializedName(SERIALIZED_NAME_AUTOSCALING)
  private V1alpha1RayClusterSpecAutoscaling autoscaling;

  public static final String SERIALIZED_NAME_CLIENT_SERVER_PORT = "clientServerPort";
  @SerializedName(SERIALIZED_NAME_CLIENT_SERVER_PORT)
  private Integer clientServerPort;

  public static final String SERIALIZED_NAME_DASHBOARD_PORT = "dashboardPort";
  @SerializedName(SERIALIZED_NAME_DASHBOARD_PORT)
  private Integer dashboardPort;

  public static final String SERIALIZED_NAME_ENABLE_DASHBOARD = "enableDashboard";
  @SerializedName(SERIALIZED_NAME_ENABLE_DASHBOARD)
  private Boolean enableDashboard;

  public static final String SERIALIZED_NAME_ENV_VARS = "envVars";
  @SerializedName(SERIALIZED_NAME_ENV_VARS)
  private List<V1alpha1RayClusterSpecEnvVars> envVars = null;

  public static final String SERIALIZED_NAME_GCS_SERVER_PORT = "gcsServerPort";
  @SerializedName(SERIALIZED_NAME_GCS_SERVER_PORT)
  private Integer gcsServerPort;

  public static final String SERIALIZED_NAME_GLOBAL_LABELS = "globalLabels";
  @SerializedName(SERIALIZED_NAME_GLOBAL_LABELS)
  private Map<String, String> globalLabels = null;

  public static final String SERIALIZED_NAME_HEAD = "head";
  @SerializedName(SERIALIZED_NAME_HEAD)
  private V1alpha1RayClusterSpecHead head;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private V1alpha1RayClusterSpecImage image;

  public static final String SERIALIZED_NAME_IMAGE_PULL_SECRETS = "imagePullSecrets";
  @SerializedName(SERIALIZED_NAME_IMAGE_PULL_SECRETS)
  private List<V1alpha1RayClusterSpecHeadCephfsSecretRef> imagePullSecrets = null;

  public static final String SERIALIZED_NAME_ISTIO_MUTUAL_T_L_S_MODE = "istioMutualTLSMode";
  @SerializedName(SERIALIZED_NAME_ISTIO_MUTUAL_T_L_S_MODE)
  private String istioMutualTLSMode;

  public static final String SERIALIZED_NAME_KERBEROS_KEYTAB = "kerberosKeytab";
  @SerializedName(SERIALIZED_NAME_KERBEROS_KEYTAB)
  private V1alpha1RayClusterSpecKerberosKeytab kerberosKeytab;

  public static final String SERIALIZED_NAME_NETWORK_POLICY = "networkPolicy";
  @SerializedName(SERIALIZED_NAME_NETWORK_POLICY)
  private V1alpha1RayClusterSpecNetworkPolicy networkPolicy;

  public static final String SERIALIZED_NAME_NODE_MANAGER_PORT = "nodeManagerPort";
  @SerializedName(SERIALIZED_NAME_NODE_MANAGER_PORT)
  private Integer nodeManagerPort;

  public static final String SERIALIZED_NAME_OBJECT_MANAGER_PORT = "objectManagerPort";
  @SerializedName(SERIALIZED_NAME_OBJECT_MANAGER_PORT)
  private Integer objectManagerPort;

  public static final String SERIALIZED_NAME_OBJECT_STORE_MEMORY_BYTES = "objectStoreMemoryBytes";
  @SerializedName(SERIALIZED_NAME_OBJECT_STORE_MEMORY_BYTES)
  private Long objectStoreMemoryBytes;

  public static final String SERIALIZED_NAME_POD_SECURITY_CONTEXT = "podSecurityContext";
  @SerializedName(SERIALIZED_NAME_POD_SECURITY_CONTEXT)
  private V1alpha1RayClusterSpecPodSecurityContext podSecurityContext;

  public static final String SERIALIZED_NAME_POD_SECURITY_POLICY = "podSecurityPolicy";
  @SerializedName(SERIALIZED_NAME_POD_SECURITY_POLICY)
  private String podSecurityPolicy;

  public static final String SERIALIZED_NAME_PORT = "port";
  @SerializedName(SERIALIZED_NAME_PORT)
  private Integer port;

  public static final String SERIALIZED_NAME_REDIS_SHARD_PORTS = "redisShardPorts";
  @SerializedName(SERIALIZED_NAME_REDIS_SHARD_PORTS)
  private List<Integer> redisShardPorts = null;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT = "serviceAccount";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT)
  private V1alpha1RayClusterSpecServiceAccount serviceAccount;

  public static final String SERIALIZED_NAME_WORKER = "worker";
  @SerializedName(SERIALIZED_NAME_WORKER)
  private V1alpha1RayClusterSpecWorker worker;

  public static final String SERIALIZED_NAME_WORKER_PORTS = "workerPorts";
  @SerializedName(SERIALIZED_NAME_WORKER_PORTS)
  private List<Integer> workerPorts = null;


  public V1alpha1RayClusterSpec autoscaling(V1alpha1RayClusterSpecAutoscaling autoscaling) {
    
    this.autoscaling = autoscaling;
    return this;
  }

   /**
   * Get autoscaling
   * @return autoscaling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecAutoscaling getAutoscaling() {
    return autoscaling;
  }


  public void setAutoscaling(V1alpha1RayClusterSpecAutoscaling autoscaling) {
    this.autoscaling = autoscaling;
  }


  public V1alpha1RayClusterSpec clientServerPort(Integer clientServerPort) {
    
    this.clientServerPort = clientServerPort;
    return this;
  }

   /**
   * Get clientServerPort
   * @return clientServerPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getClientServerPort() {
    return clientServerPort;
  }


  public void setClientServerPort(Integer clientServerPort) {
    this.clientServerPort = clientServerPort;
  }


  public V1alpha1RayClusterSpec dashboardPort(Integer dashboardPort) {
    
    this.dashboardPort = dashboardPort;
    return this;
  }

   /**
   * Get dashboardPort
   * @return dashboardPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getDashboardPort() {
    return dashboardPort;
  }


  public void setDashboardPort(Integer dashboardPort) {
    this.dashboardPort = dashboardPort;
  }


  public V1alpha1RayClusterSpec enableDashboard(Boolean enableDashboard) {
    
    this.enableDashboard = enableDashboard;
    return this;
  }

   /**
   * Get enableDashboard
   * @return enableDashboard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getEnableDashboard() {
    return enableDashboard;
  }


  public void setEnableDashboard(Boolean enableDashboard) {
    this.enableDashboard = enableDashboard;
  }


  public V1alpha1RayClusterSpec envVars(List<V1alpha1RayClusterSpecEnvVars> envVars) {
    
    this.envVars = envVars;
    return this;
  }

  public V1alpha1RayClusterSpec addEnvVarsItem(V1alpha1RayClusterSpecEnvVars envVarsItem) {
    if (this.envVars == null) {
      this.envVars = new ArrayList<>();
    }
    this.envVars.add(envVarsItem);
    return this;
  }

   /**
   * Get envVars
   * @return envVars
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1alpha1RayClusterSpecEnvVars> getEnvVars() {
    return envVars;
  }


  public void setEnvVars(List<V1alpha1RayClusterSpecEnvVars> envVars) {
    this.envVars = envVars;
  }


  public V1alpha1RayClusterSpec gcsServerPort(Integer gcsServerPort) {
    
    this.gcsServerPort = gcsServerPort;
    return this;
  }

   /**
   * Get gcsServerPort
   * @return gcsServerPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getGcsServerPort() {
    return gcsServerPort;
  }


  public void setGcsServerPort(Integer gcsServerPort) {
    this.gcsServerPort = gcsServerPort;
  }


  public V1alpha1RayClusterSpec globalLabels(Map<String, String> globalLabels) {
    
    this.globalLabels = globalLabels;
    return this;
  }

  public V1alpha1RayClusterSpec putGlobalLabelsItem(String key, String globalLabelsItem) {
    if (this.globalLabels == null) {
      this.globalLabels = new HashMap<>();
    }
    this.globalLabels.put(key, globalLabelsItem);
    return this;
  }

   /**
   * Get globalLabels
   * @return globalLabels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getGlobalLabels() {
    return globalLabels;
  }


  public void setGlobalLabels(Map<String, String> globalLabels) {
    this.globalLabels = globalLabels;
  }


  public V1alpha1RayClusterSpec head(V1alpha1RayClusterSpecHead head) {
    
    this.head = head;
    return this;
  }

   /**
   * Get head
   * @return head
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecHead getHead() {
    return head;
  }


  public void setHead(V1alpha1RayClusterSpecHead head) {
    this.head = head;
  }


  public V1alpha1RayClusterSpec image(V1alpha1RayClusterSpecImage image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecImage getImage() {
    return image;
  }


  public void setImage(V1alpha1RayClusterSpecImage image) {
    this.image = image;
  }


  public V1alpha1RayClusterSpec imagePullSecrets(List<V1alpha1RayClusterSpecHeadCephfsSecretRef> imagePullSecrets) {
    
    this.imagePullSecrets = imagePullSecrets;
    return this;
  }

  public V1alpha1RayClusterSpec addImagePullSecretsItem(V1alpha1RayClusterSpecHeadCephfsSecretRef imagePullSecretsItem) {
    if (this.imagePullSecrets == null) {
      this.imagePullSecrets = new ArrayList<>();
    }
    this.imagePullSecrets.add(imagePullSecretsItem);
    return this;
  }

   /**
   * Get imagePullSecrets
   * @return imagePullSecrets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1alpha1RayClusterSpecHeadCephfsSecretRef> getImagePullSecrets() {
    return imagePullSecrets;
  }


  public void setImagePullSecrets(List<V1alpha1RayClusterSpecHeadCephfsSecretRef> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
  }


  public V1alpha1RayClusterSpec istioMutualTLSMode(String istioMutualTLSMode) {
    
    this.istioMutualTLSMode = istioMutualTLSMode;
    return this;
  }

   /**
   * Get istioMutualTLSMode
   * @return istioMutualTLSMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIstioMutualTLSMode() {
    return istioMutualTLSMode;
  }


  public void setIstioMutualTLSMode(String istioMutualTLSMode) {
    this.istioMutualTLSMode = istioMutualTLSMode;
  }


  public V1alpha1RayClusterSpec kerberosKeytab(V1alpha1RayClusterSpecKerberosKeytab kerberosKeytab) {
    
    this.kerberosKeytab = kerberosKeytab;
    return this;
  }

   /**
   * Get kerberosKeytab
   * @return kerberosKeytab
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecKerberosKeytab getKerberosKeytab() {
    return kerberosKeytab;
  }


  public void setKerberosKeytab(V1alpha1RayClusterSpecKerberosKeytab kerberosKeytab) {
    this.kerberosKeytab = kerberosKeytab;
  }


  public V1alpha1RayClusterSpec networkPolicy(V1alpha1RayClusterSpecNetworkPolicy networkPolicy) {
    
    this.networkPolicy = networkPolicy;
    return this;
  }

   /**
   * Get networkPolicy
   * @return networkPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecNetworkPolicy getNetworkPolicy() {
    return networkPolicy;
  }


  public void setNetworkPolicy(V1alpha1RayClusterSpecNetworkPolicy networkPolicy) {
    this.networkPolicy = networkPolicy;
  }


  public V1alpha1RayClusterSpec nodeManagerPort(Integer nodeManagerPort) {
    
    this.nodeManagerPort = nodeManagerPort;
    return this;
  }

   /**
   * Get nodeManagerPort
   * @return nodeManagerPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNodeManagerPort() {
    return nodeManagerPort;
  }


  public void setNodeManagerPort(Integer nodeManagerPort) {
    this.nodeManagerPort = nodeManagerPort;
  }


  public V1alpha1RayClusterSpec objectManagerPort(Integer objectManagerPort) {
    
    this.objectManagerPort = objectManagerPort;
    return this;
  }

   /**
   * Get objectManagerPort
   * @return objectManagerPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getObjectManagerPort() {
    return objectManagerPort;
  }


  public void setObjectManagerPort(Integer objectManagerPort) {
    this.objectManagerPort = objectManagerPort;
  }


  public V1alpha1RayClusterSpec objectStoreMemoryBytes(Long objectStoreMemoryBytes) {
    
    this.objectStoreMemoryBytes = objectStoreMemoryBytes;
    return this;
  }

   /**
   * Get objectStoreMemoryBytes
   * @return objectStoreMemoryBytes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getObjectStoreMemoryBytes() {
    return objectStoreMemoryBytes;
  }


  public void setObjectStoreMemoryBytes(Long objectStoreMemoryBytes) {
    this.objectStoreMemoryBytes = objectStoreMemoryBytes;
  }


  public V1alpha1RayClusterSpec podSecurityContext(V1alpha1RayClusterSpecPodSecurityContext podSecurityContext) {
    
    this.podSecurityContext = podSecurityContext;
    return this;
  }

   /**
   * Get podSecurityContext
   * @return podSecurityContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecPodSecurityContext getPodSecurityContext() {
    return podSecurityContext;
  }


  public void setPodSecurityContext(V1alpha1RayClusterSpecPodSecurityContext podSecurityContext) {
    this.podSecurityContext = podSecurityContext;
  }


  public V1alpha1RayClusterSpec podSecurityPolicy(String podSecurityPolicy) {
    
    this.podSecurityPolicy = podSecurityPolicy;
    return this;
  }

   /**
   * Get podSecurityPolicy
   * @return podSecurityPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPodSecurityPolicy() {
    return podSecurityPolicy;
  }


  public void setPodSecurityPolicy(String podSecurityPolicy) {
    this.podSecurityPolicy = podSecurityPolicy;
  }


  public V1alpha1RayClusterSpec port(Integer port) {
    
    this.port = port;
    return this;
  }

   /**
   * Get port
   * @return port
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPort() {
    return port;
  }


  public void setPort(Integer port) {
    this.port = port;
  }


  public V1alpha1RayClusterSpec redisShardPorts(List<Integer> redisShardPorts) {
    
    this.redisShardPorts = redisShardPorts;
    return this;
  }

  public V1alpha1RayClusterSpec addRedisShardPortsItem(Integer redisShardPortsItem) {
    if (this.redisShardPorts == null) {
      this.redisShardPorts = new ArrayList<>();
    }
    this.redisShardPorts.add(redisShardPortsItem);
    return this;
  }

   /**
   * Get redisShardPorts
   * @return redisShardPorts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getRedisShardPorts() {
    return redisShardPorts;
  }


  public void setRedisShardPorts(List<Integer> redisShardPorts) {
    this.redisShardPorts = redisShardPorts;
  }


  public V1alpha1RayClusterSpec serviceAccount(V1alpha1RayClusterSpecServiceAccount serviceAccount) {
    
    this.serviceAccount = serviceAccount;
    return this;
  }

   /**
   * Get serviceAccount
   * @return serviceAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecServiceAccount getServiceAccount() {
    return serviceAccount;
  }


  public void setServiceAccount(V1alpha1RayClusterSpecServiceAccount serviceAccount) {
    this.serviceAccount = serviceAccount;
  }


  public V1alpha1RayClusterSpec worker(V1alpha1RayClusterSpecWorker worker) {
    
    this.worker = worker;
    return this;
  }

   /**
   * Get worker
   * @return worker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1RayClusterSpecWorker getWorker() {
    return worker;
  }


  public void setWorker(V1alpha1RayClusterSpecWorker worker) {
    this.worker = worker;
  }


  public V1alpha1RayClusterSpec workerPorts(List<Integer> workerPorts) {
    
    this.workerPorts = workerPorts;
    return this;
  }

  public V1alpha1RayClusterSpec addWorkerPortsItem(Integer workerPortsItem) {
    if (this.workerPorts == null) {
      this.workerPorts = new ArrayList<>();
    }
    this.workerPorts.add(workerPortsItem);
    return this;
  }

   /**
   * Get workerPorts
   * @return workerPorts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Integer> getWorkerPorts() {
    return workerPorts;
  }


  public void setWorkerPorts(List<Integer> workerPorts) {
    this.workerPorts = workerPorts;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1RayClusterSpec v1alpha1RayClusterSpec = (V1alpha1RayClusterSpec) o;
    return Objects.equals(this.autoscaling, v1alpha1RayClusterSpec.autoscaling) &&
        Objects.equals(this.clientServerPort, v1alpha1RayClusterSpec.clientServerPort) &&
        Objects.equals(this.dashboardPort, v1alpha1RayClusterSpec.dashboardPort) &&
        Objects.equals(this.enableDashboard, v1alpha1RayClusterSpec.enableDashboard) &&
        Objects.equals(this.envVars, v1alpha1RayClusterSpec.envVars) &&
        Objects.equals(this.gcsServerPort, v1alpha1RayClusterSpec.gcsServerPort) &&
        Objects.equals(this.globalLabels, v1alpha1RayClusterSpec.globalLabels) &&
        Objects.equals(this.head, v1alpha1RayClusterSpec.head) &&
        Objects.equals(this.image, v1alpha1RayClusterSpec.image) &&
        Objects.equals(this.imagePullSecrets, v1alpha1RayClusterSpec.imagePullSecrets) &&
        Objects.equals(this.istioMutualTLSMode, v1alpha1RayClusterSpec.istioMutualTLSMode) &&
        Objects.equals(this.kerberosKeytab, v1alpha1RayClusterSpec.kerberosKeytab) &&
        Objects.equals(this.networkPolicy, v1alpha1RayClusterSpec.networkPolicy) &&
        Objects.equals(this.nodeManagerPort, v1alpha1RayClusterSpec.nodeManagerPort) &&
        Objects.equals(this.objectManagerPort, v1alpha1RayClusterSpec.objectManagerPort) &&
        Objects.equals(this.objectStoreMemoryBytes, v1alpha1RayClusterSpec.objectStoreMemoryBytes) &&
        Objects.equals(this.podSecurityContext, v1alpha1RayClusterSpec.podSecurityContext) &&
        Objects.equals(this.podSecurityPolicy, v1alpha1RayClusterSpec.podSecurityPolicy) &&
        Objects.equals(this.port, v1alpha1RayClusterSpec.port) &&
        Objects.equals(this.redisShardPorts, v1alpha1RayClusterSpec.redisShardPorts) &&
        Objects.equals(this.serviceAccount, v1alpha1RayClusterSpec.serviceAccount) &&
        Objects.equals(this.worker, v1alpha1RayClusterSpec.worker) &&
        Objects.equals(this.workerPorts, v1alpha1RayClusterSpec.workerPorts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoscaling, clientServerPort, dashboardPort, enableDashboard, envVars, gcsServerPort, globalLabels, head, image, imagePullSecrets, istioMutualTLSMode, kerberosKeytab, networkPolicy, nodeManagerPort, objectManagerPort, objectStoreMemoryBytes, podSecurityContext, podSecurityPolicy, port, redisShardPorts, serviceAccount, worker, workerPorts);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1RayClusterSpec {\n");
    sb.append("    autoscaling: ").append(toIndentedString(autoscaling)).append("\n");
    sb.append("    clientServerPort: ").append(toIndentedString(clientServerPort)).append("\n");
    sb.append("    dashboardPort: ").append(toIndentedString(dashboardPort)).append("\n");
    sb.append("    enableDashboard: ").append(toIndentedString(enableDashboard)).append("\n");
    sb.append("    envVars: ").append(toIndentedString(envVars)).append("\n");
    sb.append("    gcsServerPort: ").append(toIndentedString(gcsServerPort)).append("\n");
    sb.append("    globalLabels: ").append(toIndentedString(globalLabels)).append("\n");
    sb.append("    head: ").append(toIndentedString(head)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imagePullSecrets: ").append(toIndentedString(imagePullSecrets)).append("\n");
    sb.append("    istioMutualTLSMode: ").append(toIndentedString(istioMutualTLSMode)).append("\n");
    sb.append("    kerberosKeytab: ").append(toIndentedString(kerberosKeytab)).append("\n");
    sb.append("    networkPolicy: ").append(toIndentedString(networkPolicy)).append("\n");
    sb.append("    nodeManagerPort: ").append(toIndentedString(nodeManagerPort)).append("\n");
    sb.append("    objectManagerPort: ").append(toIndentedString(objectManagerPort)).append("\n");
    sb.append("    objectStoreMemoryBytes: ").append(toIndentedString(objectStoreMemoryBytes)).append("\n");
    sb.append("    podSecurityContext: ").append(toIndentedString(podSecurityContext)).append("\n");
    sb.append("    podSecurityPolicy: ").append(toIndentedString(podSecurityPolicy)).append("\n");
    sb.append("    port: ").append(toIndentedString(port)).append("\n");
    sb.append("    redisShardPorts: ").append(toIndentedString(redisShardPorts)).append("\n");
    sb.append("    serviceAccount: ").append(toIndentedString(serviceAccount)).append("\n");
    sb.append("    worker: ").append(toIndentedString(worker)).append("\n");
    sb.append("    workerPorts: ").append(toIndentedString(workerPorts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

