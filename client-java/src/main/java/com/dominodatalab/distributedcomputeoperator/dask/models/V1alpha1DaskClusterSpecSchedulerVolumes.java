/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dominodatalab.distributedcomputeoperator.dask.models;

import java.util.Objects;
import java.util.Arrays;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerAwsElasticBlockStore;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerAzureDisk;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerAzureFile;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerCephfs;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerCinder;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerConfigMap;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerCsi;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerDownwardAPI;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerEmptyDir;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerEphemeral;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerFc;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerFlexVolume;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerFlocker;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerGcePersistentDisk;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerGitRepo;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerGlusterfs;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerHostPath;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerIscsi;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerNfs;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerPersistentVolumeClaim;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerPhotonPersistentDisk;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerPortworxVolume;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerProjected;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerQuobyte;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerRbd;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerScaleIO;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerSecret;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerStorageos;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerVsphereVolume;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1alpha1DaskClusterSpecSchedulerVolumes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-04T16:36:51.907Z[Etc/UTC]")
public class V1alpha1DaskClusterSpecSchedulerVolumes {
  public static final String SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE = "awsElasticBlockStore";
  @SerializedName(SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE)
  private V1alpha1DaskClusterSpecSchedulerAwsElasticBlockStore awsElasticBlockStore;

  public static final String SERIALIZED_NAME_AZURE_DISK = "azureDisk";
  @SerializedName(SERIALIZED_NAME_AZURE_DISK)
  private V1alpha1DaskClusterSpecSchedulerAzureDisk azureDisk;

  public static final String SERIALIZED_NAME_AZURE_FILE = "azureFile";
  @SerializedName(SERIALIZED_NAME_AZURE_FILE)
  private V1alpha1DaskClusterSpecSchedulerAzureFile azureFile;

  public static final String SERIALIZED_NAME_CEPHFS = "cephfs";
  @SerializedName(SERIALIZED_NAME_CEPHFS)
  private V1alpha1DaskClusterSpecSchedulerCephfs cephfs;

  public static final String SERIALIZED_NAME_CINDER = "cinder";
  @SerializedName(SERIALIZED_NAME_CINDER)
  private V1alpha1DaskClusterSpecSchedulerCinder cinder;

  public static final String SERIALIZED_NAME_CONFIG_MAP = "configMap";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAP)
  private V1alpha1DaskClusterSpecSchedulerConfigMap configMap;

  public static final String SERIALIZED_NAME_CSI = "csi";
  @SerializedName(SERIALIZED_NAME_CSI)
  private V1alpha1DaskClusterSpecSchedulerCsi csi;

  public static final String SERIALIZED_NAME_DOWNWARD_A_P_I = "downwardAPI";
  @SerializedName(SERIALIZED_NAME_DOWNWARD_A_P_I)
  private V1alpha1DaskClusterSpecSchedulerDownwardAPI downwardAPI;

  public static final String SERIALIZED_NAME_EMPTY_DIR = "emptyDir";
  @SerializedName(SERIALIZED_NAME_EMPTY_DIR)
  private V1alpha1DaskClusterSpecSchedulerEmptyDir emptyDir;

  public static final String SERIALIZED_NAME_EPHEMERAL = "ephemeral";
  @SerializedName(SERIALIZED_NAME_EPHEMERAL)
  private V1alpha1DaskClusterSpecSchedulerEphemeral ephemeral;

  public static final String SERIALIZED_NAME_FC = "fc";
  @SerializedName(SERIALIZED_NAME_FC)
  private V1alpha1DaskClusterSpecSchedulerFc fc;

  public static final String SERIALIZED_NAME_FLEX_VOLUME = "flexVolume";
  @SerializedName(SERIALIZED_NAME_FLEX_VOLUME)
  private V1alpha1DaskClusterSpecSchedulerFlexVolume flexVolume;

  public static final String SERIALIZED_NAME_FLOCKER = "flocker";
  @SerializedName(SERIALIZED_NAME_FLOCKER)
  private V1alpha1DaskClusterSpecSchedulerFlocker flocker;

  public static final String SERIALIZED_NAME_GCE_PERSISTENT_DISK = "gcePersistentDisk";
  @SerializedName(SERIALIZED_NAME_GCE_PERSISTENT_DISK)
  private V1alpha1DaskClusterSpecSchedulerGcePersistentDisk gcePersistentDisk;

  public static final String SERIALIZED_NAME_GIT_REPO = "gitRepo";
  @SerializedName(SERIALIZED_NAME_GIT_REPO)
  private V1alpha1DaskClusterSpecSchedulerGitRepo gitRepo;

  public static final String SERIALIZED_NAME_GLUSTERFS = "glusterfs";
  @SerializedName(SERIALIZED_NAME_GLUSTERFS)
  private V1alpha1DaskClusterSpecSchedulerGlusterfs glusterfs;

  public static final String SERIALIZED_NAME_HOST_PATH = "hostPath";
  @SerializedName(SERIALIZED_NAME_HOST_PATH)
  private V1alpha1DaskClusterSpecSchedulerHostPath hostPath;

  public static final String SERIALIZED_NAME_ISCSI = "iscsi";
  @SerializedName(SERIALIZED_NAME_ISCSI)
  private V1alpha1DaskClusterSpecSchedulerIscsi iscsi;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NFS = "nfs";
  @SerializedName(SERIALIZED_NAME_NFS)
  private V1alpha1DaskClusterSpecSchedulerNfs nfs;

  public static final String SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM = "persistentVolumeClaim";
  @SerializedName(SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM)
  private V1alpha1DaskClusterSpecSchedulerPersistentVolumeClaim persistentVolumeClaim;

  public static final String SERIALIZED_NAME_PHOTON_PERSISTENT_DISK = "photonPersistentDisk";
  @SerializedName(SERIALIZED_NAME_PHOTON_PERSISTENT_DISK)
  private V1alpha1DaskClusterSpecSchedulerPhotonPersistentDisk photonPersistentDisk;

  public static final String SERIALIZED_NAME_PORTWORX_VOLUME = "portworxVolume";
  @SerializedName(SERIALIZED_NAME_PORTWORX_VOLUME)
  private V1alpha1DaskClusterSpecSchedulerPortworxVolume portworxVolume;

  public static final String SERIALIZED_NAME_PROJECTED = "projected";
  @SerializedName(SERIALIZED_NAME_PROJECTED)
  private V1alpha1DaskClusterSpecSchedulerProjected projected;

  public static final String SERIALIZED_NAME_QUOBYTE = "quobyte";
  @SerializedName(SERIALIZED_NAME_QUOBYTE)
  private V1alpha1DaskClusterSpecSchedulerQuobyte quobyte;

  public static final String SERIALIZED_NAME_RBD = "rbd";
  @SerializedName(SERIALIZED_NAME_RBD)
  private V1alpha1DaskClusterSpecSchedulerRbd rbd;

  public static final String SERIALIZED_NAME_SCALE_I_O = "scaleIO";
  @SerializedName(SERIALIZED_NAME_SCALE_I_O)
  private V1alpha1DaskClusterSpecSchedulerScaleIO scaleIO;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private V1alpha1DaskClusterSpecSchedulerSecret secret;

  public static final String SERIALIZED_NAME_STORAGEOS = "storageos";
  @SerializedName(SERIALIZED_NAME_STORAGEOS)
  private V1alpha1DaskClusterSpecSchedulerStorageos storageos;

  public static final String SERIALIZED_NAME_VSPHERE_VOLUME = "vsphereVolume";
  @SerializedName(SERIALIZED_NAME_VSPHERE_VOLUME)
  private V1alpha1DaskClusterSpecSchedulerVsphereVolume vsphereVolume;


  public V1alpha1DaskClusterSpecSchedulerVolumes awsElasticBlockStore(V1alpha1DaskClusterSpecSchedulerAwsElasticBlockStore awsElasticBlockStore) {
    
    this.awsElasticBlockStore = awsElasticBlockStore;
    return this;
  }

   /**
   * Get awsElasticBlockStore
   * @return awsElasticBlockStore
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerAwsElasticBlockStore getAwsElasticBlockStore() {
    return awsElasticBlockStore;
  }


  public void setAwsElasticBlockStore(V1alpha1DaskClusterSpecSchedulerAwsElasticBlockStore awsElasticBlockStore) {
    this.awsElasticBlockStore = awsElasticBlockStore;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes azureDisk(V1alpha1DaskClusterSpecSchedulerAzureDisk azureDisk) {
    
    this.azureDisk = azureDisk;
    return this;
  }

   /**
   * Get azureDisk
   * @return azureDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerAzureDisk getAzureDisk() {
    return azureDisk;
  }


  public void setAzureDisk(V1alpha1DaskClusterSpecSchedulerAzureDisk azureDisk) {
    this.azureDisk = azureDisk;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes azureFile(V1alpha1DaskClusterSpecSchedulerAzureFile azureFile) {
    
    this.azureFile = azureFile;
    return this;
  }

   /**
   * Get azureFile
   * @return azureFile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerAzureFile getAzureFile() {
    return azureFile;
  }


  public void setAzureFile(V1alpha1DaskClusterSpecSchedulerAzureFile azureFile) {
    this.azureFile = azureFile;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes cephfs(V1alpha1DaskClusterSpecSchedulerCephfs cephfs) {
    
    this.cephfs = cephfs;
    return this;
  }

   /**
   * Get cephfs
   * @return cephfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerCephfs getCephfs() {
    return cephfs;
  }


  public void setCephfs(V1alpha1DaskClusterSpecSchedulerCephfs cephfs) {
    this.cephfs = cephfs;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes cinder(V1alpha1DaskClusterSpecSchedulerCinder cinder) {
    
    this.cinder = cinder;
    return this;
  }

   /**
   * Get cinder
   * @return cinder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerCinder getCinder() {
    return cinder;
  }


  public void setCinder(V1alpha1DaskClusterSpecSchedulerCinder cinder) {
    this.cinder = cinder;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes configMap(V1alpha1DaskClusterSpecSchedulerConfigMap configMap) {
    
    this.configMap = configMap;
    return this;
  }

   /**
   * Get configMap
   * @return configMap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerConfigMap getConfigMap() {
    return configMap;
  }


  public void setConfigMap(V1alpha1DaskClusterSpecSchedulerConfigMap configMap) {
    this.configMap = configMap;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes csi(V1alpha1DaskClusterSpecSchedulerCsi csi) {
    
    this.csi = csi;
    return this;
  }

   /**
   * Get csi
   * @return csi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerCsi getCsi() {
    return csi;
  }


  public void setCsi(V1alpha1DaskClusterSpecSchedulerCsi csi) {
    this.csi = csi;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes downwardAPI(V1alpha1DaskClusterSpecSchedulerDownwardAPI downwardAPI) {
    
    this.downwardAPI = downwardAPI;
    return this;
  }

   /**
   * Get downwardAPI
   * @return downwardAPI
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerDownwardAPI getDownwardAPI() {
    return downwardAPI;
  }


  public void setDownwardAPI(V1alpha1DaskClusterSpecSchedulerDownwardAPI downwardAPI) {
    this.downwardAPI = downwardAPI;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes emptyDir(V1alpha1DaskClusterSpecSchedulerEmptyDir emptyDir) {
    
    this.emptyDir = emptyDir;
    return this;
  }

   /**
   * Get emptyDir
   * @return emptyDir
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerEmptyDir getEmptyDir() {
    return emptyDir;
  }


  public void setEmptyDir(V1alpha1DaskClusterSpecSchedulerEmptyDir emptyDir) {
    this.emptyDir = emptyDir;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes ephemeral(V1alpha1DaskClusterSpecSchedulerEphemeral ephemeral) {
    
    this.ephemeral = ephemeral;
    return this;
  }

   /**
   * Get ephemeral
   * @return ephemeral
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerEphemeral getEphemeral() {
    return ephemeral;
  }


  public void setEphemeral(V1alpha1DaskClusterSpecSchedulerEphemeral ephemeral) {
    this.ephemeral = ephemeral;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes fc(V1alpha1DaskClusterSpecSchedulerFc fc) {
    
    this.fc = fc;
    return this;
  }

   /**
   * Get fc
   * @return fc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerFc getFc() {
    return fc;
  }


  public void setFc(V1alpha1DaskClusterSpecSchedulerFc fc) {
    this.fc = fc;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes flexVolume(V1alpha1DaskClusterSpecSchedulerFlexVolume flexVolume) {
    
    this.flexVolume = flexVolume;
    return this;
  }

   /**
   * Get flexVolume
   * @return flexVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerFlexVolume getFlexVolume() {
    return flexVolume;
  }


  public void setFlexVolume(V1alpha1DaskClusterSpecSchedulerFlexVolume flexVolume) {
    this.flexVolume = flexVolume;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes flocker(V1alpha1DaskClusterSpecSchedulerFlocker flocker) {
    
    this.flocker = flocker;
    return this;
  }

   /**
   * Get flocker
   * @return flocker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerFlocker getFlocker() {
    return flocker;
  }


  public void setFlocker(V1alpha1DaskClusterSpecSchedulerFlocker flocker) {
    this.flocker = flocker;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes gcePersistentDisk(V1alpha1DaskClusterSpecSchedulerGcePersistentDisk gcePersistentDisk) {
    
    this.gcePersistentDisk = gcePersistentDisk;
    return this;
  }

   /**
   * Get gcePersistentDisk
   * @return gcePersistentDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerGcePersistentDisk getGcePersistentDisk() {
    return gcePersistentDisk;
  }


  public void setGcePersistentDisk(V1alpha1DaskClusterSpecSchedulerGcePersistentDisk gcePersistentDisk) {
    this.gcePersistentDisk = gcePersistentDisk;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes gitRepo(V1alpha1DaskClusterSpecSchedulerGitRepo gitRepo) {
    
    this.gitRepo = gitRepo;
    return this;
  }

   /**
   * Get gitRepo
   * @return gitRepo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerGitRepo getGitRepo() {
    return gitRepo;
  }


  public void setGitRepo(V1alpha1DaskClusterSpecSchedulerGitRepo gitRepo) {
    this.gitRepo = gitRepo;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes glusterfs(V1alpha1DaskClusterSpecSchedulerGlusterfs glusterfs) {
    
    this.glusterfs = glusterfs;
    return this;
  }

   /**
   * Get glusterfs
   * @return glusterfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerGlusterfs getGlusterfs() {
    return glusterfs;
  }


  public void setGlusterfs(V1alpha1DaskClusterSpecSchedulerGlusterfs glusterfs) {
    this.glusterfs = glusterfs;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes hostPath(V1alpha1DaskClusterSpecSchedulerHostPath hostPath) {
    
    this.hostPath = hostPath;
    return this;
  }

   /**
   * Get hostPath
   * @return hostPath
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerHostPath getHostPath() {
    return hostPath;
  }


  public void setHostPath(V1alpha1DaskClusterSpecSchedulerHostPath hostPath) {
    this.hostPath = hostPath;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes iscsi(V1alpha1DaskClusterSpecSchedulerIscsi iscsi) {
    
    this.iscsi = iscsi;
    return this;
  }

   /**
   * Get iscsi
   * @return iscsi
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerIscsi getIscsi() {
    return iscsi;
  }


  public void setIscsi(V1alpha1DaskClusterSpecSchedulerIscsi iscsi) {
    this.iscsi = iscsi;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes nfs(V1alpha1DaskClusterSpecSchedulerNfs nfs) {
    
    this.nfs = nfs;
    return this;
  }

   /**
   * Get nfs
   * @return nfs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerNfs getNfs() {
    return nfs;
  }


  public void setNfs(V1alpha1DaskClusterSpecSchedulerNfs nfs) {
    this.nfs = nfs;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes persistentVolumeClaim(V1alpha1DaskClusterSpecSchedulerPersistentVolumeClaim persistentVolumeClaim) {
    
    this.persistentVolumeClaim = persistentVolumeClaim;
    return this;
  }

   /**
   * Get persistentVolumeClaim
   * @return persistentVolumeClaim
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerPersistentVolumeClaim getPersistentVolumeClaim() {
    return persistentVolumeClaim;
  }


  public void setPersistentVolumeClaim(V1alpha1DaskClusterSpecSchedulerPersistentVolumeClaim persistentVolumeClaim) {
    this.persistentVolumeClaim = persistentVolumeClaim;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes photonPersistentDisk(V1alpha1DaskClusterSpecSchedulerPhotonPersistentDisk photonPersistentDisk) {
    
    this.photonPersistentDisk = photonPersistentDisk;
    return this;
  }

   /**
   * Get photonPersistentDisk
   * @return photonPersistentDisk
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerPhotonPersistentDisk getPhotonPersistentDisk() {
    return photonPersistentDisk;
  }


  public void setPhotonPersistentDisk(V1alpha1DaskClusterSpecSchedulerPhotonPersistentDisk photonPersistentDisk) {
    this.photonPersistentDisk = photonPersistentDisk;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes portworxVolume(V1alpha1DaskClusterSpecSchedulerPortworxVolume portworxVolume) {
    
    this.portworxVolume = portworxVolume;
    return this;
  }

   /**
   * Get portworxVolume
   * @return portworxVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerPortworxVolume getPortworxVolume() {
    return portworxVolume;
  }


  public void setPortworxVolume(V1alpha1DaskClusterSpecSchedulerPortworxVolume portworxVolume) {
    this.portworxVolume = portworxVolume;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes projected(V1alpha1DaskClusterSpecSchedulerProjected projected) {
    
    this.projected = projected;
    return this;
  }

   /**
   * Get projected
   * @return projected
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerProjected getProjected() {
    return projected;
  }


  public void setProjected(V1alpha1DaskClusterSpecSchedulerProjected projected) {
    this.projected = projected;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes quobyte(V1alpha1DaskClusterSpecSchedulerQuobyte quobyte) {
    
    this.quobyte = quobyte;
    return this;
  }

   /**
   * Get quobyte
   * @return quobyte
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerQuobyte getQuobyte() {
    return quobyte;
  }


  public void setQuobyte(V1alpha1DaskClusterSpecSchedulerQuobyte quobyte) {
    this.quobyte = quobyte;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes rbd(V1alpha1DaskClusterSpecSchedulerRbd rbd) {
    
    this.rbd = rbd;
    return this;
  }

   /**
   * Get rbd
   * @return rbd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerRbd getRbd() {
    return rbd;
  }


  public void setRbd(V1alpha1DaskClusterSpecSchedulerRbd rbd) {
    this.rbd = rbd;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes scaleIO(V1alpha1DaskClusterSpecSchedulerScaleIO scaleIO) {
    
    this.scaleIO = scaleIO;
    return this;
  }

   /**
   * Get scaleIO
   * @return scaleIO
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerScaleIO getScaleIO() {
    return scaleIO;
  }


  public void setScaleIO(V1alpha1DaskClusterSpecSchedulerScaleIO scaleIO) {
    this.scaleIO = scaleIO;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes secret(V1alpha1DaskClusterSpecSchedulerSecret secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerSecret getSecret() {
    return secret;
  }


  public void setSecret(V1alpha1DaskClusterSpecSchedulerSecret secret) {
    this.secret = secret;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes storageos(V1alpha1DaskClusterSpecSchedulerStorageos storageos) {
    
    this.storageos = storageos;
    return this;
  }

   /**
   * Get storageos
   * @return storageos
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerStorageos getStorageos() {
    return storageos;
  }


  public void setStorageos(V1alpha1DaskClusterSpecSchedulerStorageos storageos) {
    this.storageos = storageos;
  }


  public V1alpha1DaskClusterSpecSchedulerVolumes vsphereVolume(V1alpha1DaskClusterSpecSchedulerVsphereVolume vsphereVolume) {
    
    this.vsphereVolume = vsphereVolume;
    return this;
  }

   /**
   * Get vsphereVolume
   * @return vsphereVolume
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerVsphereVolume getVsphereVolume() {
    return vsphereVolume;
  }


  public void setVsphereVolume(V1alpha1DaskClusterSpecSchedulerVsphereVolume vsphereVolume) {
    this.vsphereVolume = vsphereVolume;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1DaskClusterSpecSchedulerVolumes v1alpha1DaskClusterSpecSchedulerVolumes = (V1alpha1DaskClusterSpecSchedulerVolumes) o;
    return Objects.equals(this.awsElasticBlockStore, v1alpha1DaskClusterSpecSchedulerVolumes.awsElasticBlockStore) &&
        Objects.equals(this.azureDisk, v1alpha1DaskClusterSpecSchedulerVolumes.azureDisk) &&
        Objects.equals(this.azureFile, v1alpha1DaskClusterSpecSchedulerVolumes.azureFile) &&
        Objects.equals(this.cephfs, v1alpha1DaskClusterSpecSchedulerVolumes.cephfs) &&
        Objects.equals(this.cinder, v1alpha1DaskClusterSpecSchedulerVolumes.cinder) &&
        Objects.equals(this.configMap, v1alpha1DaskClusterSpecSchedulerVolumes.configMap) &&
        Objects.equals(this.csi, v1alpha1DaskClusterSpecSchedulerVolumes.csi) &&
        Objects.equals(this.downwardAPI, v1alpha1DaskClusterSpecSchedulerVolumes.downwardAPI) &&
        Objects.equals(this.emptyDir, v1alpha1DaskClusterSpecSchedulerVolumes.emptyDir) &&
        Objects.equals(this.ephemeral, v1alpha1DaskClusterSpecSchedulerVolumes.ephemeral) &&
        Objects.equals(this.fc, v1alpha1DaskClusterSpecSchedulerVolumes.fc) &&
        Objects.equals(this.flexVolume, v1alpha1DaskClusterSpecSchedulerVolumes.flexVolume) &&
        Objects.equals(this.flocker, v1alpha1DaskClusterSpecSchedulerVolumes.flocker) &&
        Objects.equals(this.gcePersistentDisk, v1alpha1DaskClusterSpecSchedulerVolumes.gcePersistentDisk) &&
        Objects.equals(this.gitRepo, v1alpha1DaskClusterSpecSchedulerVolumes.gitRepo) &&
        Objects.equals(this.glusterfs, v1alpha1DaskClusterSpecSchedulerVolumes.glusterfs) &&
        Objects.equals(this.hostPath, v1alpha1DaskClusterSpecSchedulerVolumes.hostPath) &&
        Objects.equals(this.iscsi, v1alpha1DaskClusterSpecSchedulerVolumes.iscsi) &&
        Objects.equals(this.name, v1alpha1DaskClusterSpecSchedulerVolumes.name) &&
        Objects.equals(this.nfs, v1alpha1DaskClusterSpecSchedulerVolumes.nfs) &&
        Objects.equals(this.persistentVolumeClaim, v1alpha1DaskClusterSpecSchedulerVolumes.persistentVolumeClaim) &&
        Objects.equals(this.photonPersistentDisk, v1alpha1DaskClusterSpecSchedulerVolumes.photonPersistentDisk) &&
        Objects.equals(this.portworxVolume, v1alpha1DaskClusterSpecSchedulerVolumes.portworxVolume) &&
        Objects.equals(this.projected, v1alpha1DaskClusterSpecSchedulerVolumes.projected) &&
        Objects.equals(this.quobyte, v1alpha1DaskClusterSpecSchedulerVolumes.quobyte) &&
        Objects.equals(this.rbd, v1alpha1DaskClusterSpecSchedulerVolumes.rbd) &&
        Objects.equals(this.scaleIO, v1alpha1DaskClusterSpecSchedulerVolumes.scaleIO) &&
        Objects.equals(this.secret, v1alpha1DaskClusterSpecSchedulerVolumes.secret) &&
        Objects.equals(this.storageos, v1alpha1DaskClusterSpecSchedulerVolumes.storageos) &&
        Objects.equals(this.vsphereVolume, v1alpha1DaskClusterSpecSchedulerVolumes.vsphereVolume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsElasticBlockStore, azureDisk, azureFile, cephfs, cinder, configMap, csi, downwardAPI, emptyDir, ephemeral, fc, flexVolume, flocker, gcePersistentDisk, gitRepo, glusterfs, hostPath, iscsi, name, nfs, persistentVolumeClaim, photonPersistentDisk, portworxVolume, projected, quobyte, rbd, scaleIO, secret, storageos, vsphereVolume);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1DaskClusterSpecSchedulerVolumes {\n");
    sb.append("    awsElasticBlockStore: ").append(toIndentedString(awsElasticBlockStore)).append("\n");
    sb.append("    azureDisk: ").append(toIndentedString(azureDisk)).append("\n");
    sb.append("    azureFile: ").append(toIndentedString(azureFile)).append("\n");
    sb.append("    cephfs: ").append(toIndentedString(cephfs)).append("\n");
    sb.append("    cinder: ").append(toIndentedString(cinder)).append("\n");
    sb.append("    configMap: ").append(toIndentedString(configMap)).append("\n");
    sb.append("    csi: ").append(toIndentedString(csi)).append("\n");
    sb.append("    downwardAPI: ").append(toIndentedString(downwardAPI)).append("\n");
    sb.append("    emptyDir: ").append(toIndentedString(emptyDir)).append("\n");
    sb.append("    ephemeral: ").append(toIndentedString(ephemeral)).append("\n");
    sb.append("    fc: ").append(toIndentedString(fc)).append("\n");
    sb.append("    flexVolume: ").append(toIndentedString(flexVolume)).append("\n");
    sb.append("    flocker: ").append(toIndentedString(flocker)).append("\n");
    sb.append("    gcePersistentDisk: ").append(toIndentedString(gcePersistentDisk)).append("\n");
    sb.append("    gitRepo: ").append(toIndentedString(gitRepo)).append("\n");
    sb.append("    glusterfs: ").append(toIndentedString(glusterfs)).append("\n");
    sb.append("    hostPath: ").append(toIndentedString(hostPath)).append("\n");
    sb.append("    iscsi: ").append(toIndentedString(iscsi)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nfs: ").append(toIndentedString(nfs)).append("\n");
    sb.append("    persistentVolumeClaim: ").append(toIndentedString(persistentVolumeClaim)).append("\n");
    sb.append("    photonPersistentDisk: ").append(toIndentedString(photonPersistentDisk)).append("\n");
    sb.append("    portworxVolume: ").append(toIndentedString(portworxVolume)).append("\n");
    sb.append("    projected: ").append(toIndentedString(projected)).append("\n");
    sb.append("    quobyte: ").append(toIndentedString(quobyte)).append("\n");
    sb.append("    rbd: ").append(toIndentedString(rbd)).append("\n");
    sb.append("    scaleIO: ").append(toIndentedString(scaleIO)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    storageos: ").append(toIndentedString(storageos)).append("\n");
    sb.append("    vsphereVolume: ").append(toIndentedString(vsphereVolume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

