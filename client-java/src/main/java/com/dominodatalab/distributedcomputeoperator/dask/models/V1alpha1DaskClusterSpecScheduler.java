/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dominodatalab.distributedcomputeoperator.dask.models;

import java.util.Objects;
import java.util.Arrays;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerAffinity;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerInitContainers;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerResources;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerTolerations;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerVolumeClaimTemplates;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerVolumeMounts;
import com.dominodatalab.distributedcomputeoperator.dask.models.V1alpha1DaskClusterSpecSchedulerVolumes;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * V1alpha1DaskClusterSpecScheduler
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-04T16:36:51.907Z[Etc/UTC]")
public class V1alpha1DaskClusterSpecScheduler {
  public static final String SERIALIZED_NAME_AFFINITY = "affinity";
  @SerializedName(SERIALIZED_NAME_AFFINITY)
  private V1alpha1DaskClusterSpecSchedulerAffinity affinity;

  public static final String SERIALIZED_NAME_ANNOTATIONS = "annotations";
  @SerializedName(SERIALIZED_NAME_ANNOTATIONS)
  private Map<String, String> annotations = null;

  public static final String SERIALIZED_NAME_INIT_CONTAINERS = "initContainers";
  @SerializedName(SERIALIZED_NAME_INIT_CONTAINERS)
  private List<V1alpha1DaskClusterSpecSchedulerInitContainers> initContainers = null;

  public static final String SERIALIZED_NAME_LABELS = "labels";
  @SerializedName(SERIALIZED_NAME_LABELS)
  private Map<String, String> labels = null;

  public static final String SERIALIZED_NAME_NODE_SELECTOR = "nodeSelector";
  @SerializedName(SERIALIZED_NAME_NODE_SELECTOR)
  private Map<String, String> nodeSelector = null;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private V1alpha1DaskClusterSpecSchedulerResources resources;

  public static final String SERIALIZED_NAME_TOLERATIONS = "tolerations";
  @SerializedName(SERIALIZED_NAME_TOLERATIONS)
  private List<V1alpha1DaskClusterSpecSchedulerTolerations> tolerations = null;

  public static final String SERIALIZED_NAME_VOLUME_CLAIM_TEMPLATES = "volumeClaimTemplates";
  @SerializedName(SERIALIZED_NAME_VOLUME_CLAIM_TEMPLATES)
  private List<V1alpha1DaskClusterSpecSchedulerVolumeClaimTemplates> volumeClaimTemplates = null;

  public static final String SERIALIZED_NAME_VOLUME_MOUNTS = "volumeMounts";
  @SerializedName(SERIALIZED_NAME_VOLUME_MOUNTS)
  private List<V1alpha1DaskClusterSpecSchedulerVolumeMounts> volumeMounts = null;

  public static final String SERIALIZED_NAME_VOLUMES = "volumes";
  @SerializedName(SERIALIZED_NAME_VOLUMES)
  private List<V1alpha1DaskClusterSpecSchedulerVolumes> volumes = null;


  public V1alpha1DaskClusterSpecScheduler affinity(V1alpha1DaskClusterSpecSchedulerAffinity affinity) {
    
    this.affinity = affinity;
    return this;
  }

   /**
   * Get affinity
   * @return affinity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerAffinity getAffinity() {
    return affinity;
  }


  public void setAffinity(V1alpha1DaskClusterSpecSchedulerAffinity affinity) {
    this.affinity = affinity;
  }


  public V1alpha1DaskClusterSpecScheduler annotations(Map<String, String> annotations) {
    
    this.annotations = annotations;
    return this;
  }

  public V1alpha1DaskClusterSpecScheduler putAnnotationsItem(String key, String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new HashMap<>();
    }
    this.annotations.put(key, annotationsItem);
    return this;
  }

   /**
   * Get annotations
   * @return annotations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getAnnotations() {
    return annotations;
  }


  public void setAnnotations(Map<String, String> annotations) {
    this.annotations = annotations;
  }


  public V1alpha1DaskClusterSpecScheduler initContainers(List<V1alpha1DaskClusterSpecSchedulerInitContainers> initContainers) {
    
    this.initContainers = initContainers;
    return this;
  }

  public V1alpha1DaskClusterSpecScheduler addInitContainersItem(V1alpha1DaskClusterSpecSchedulerInitContainers initContainersItem) {
    if (this.initContainers == null) {
      this.initContainers = new ArrayList<>();
    }
    this.initContainers.add(initContainersItem);
    return this;
  }

   /**
   * Get initContainers
   * @return initContainers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1alpha1DaskClusterSpecSchedulerInitContainers> getInitContainers() {
    return initContainers;
  }


  public void setInitContainers(List<V1alpha1DaskClusterSpecSchedulerInitContainers> initContainers) {
    this.initContainers = initContainers;
  }


  public V1alpha1DaskClusterSpecScheduler labels(Map<String, String> labels) {
    
    this.labels = labels;
    return this;
  }

  public V1alpha1DaskClusterSpecScheduler putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getLabels() {
    return labels;
  }


  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }


  public V1alpha1DaskClusterSpecScheduler nodeSelector(Map<String, String> nodeSelector) {
    
    this.nodeSelector = nodeSelector;
    return this;
  }

  public V1alpha1DaskClusterSpecScheduler putNodeSelectorItem(String key, String nodeSelectorItem) {
    if (this.nodeSelector == null) {
      this.nodeSelector = new HashMap<>();
    }
    this.nodeSelector.put(key, nodeSelectorItem);
    return this;
  }

   /**
   * Get nodeSelector
   * @return nodeSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getNodeSelector() {
    return nodeSelector;
  }


  public void setNodeSelector(Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
  }


  public V1alpha1DaskClusterSpecScheduler resources(V1alpha1DaskClusterSpecSchedulerResources resources) {
    
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1DaskClusterSpecSchedulerResources getResources() {
    return resources;
  }


  public void setResources(V1alpha1DaskClusterSpecSchedulerResources resources) {
    this.resources = resources;
  }


  public V1alpha1DaskClusterSpecScheduler tolerations(List<V1alpha1DaskClusterSpecSchedulerTolerations> tolerations) {
    
    this.tolerations = tolerations;
    return this;
  }

  public V1alpha1DaskClusterSpecScheduler addTolerationsItem(V1alpha1DaskClusterSpecSchedulerTolerations tolerationsItem) {
    if (this.tolerations == null) {
      this.tolerations = new ArrayList<>();
    }
    this.tolerations.add(tolerationsItem);
    return this;
  }

   /**
   * Get tolerations
   * @return tolerations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1alpha1DaskClusterSpecSchedulerTolerations> getTolerations() {
    return tolerations;
  }


  public void setTolerations(List<V1alpha1DaskClusterSpecSchedulerTolerations> tolerations) {
    this.tolerations = tolerations;
  }


  public V1alpha1DaskClusterSpecScheduler volumeClaimTemplates(List<V1alpha1DaskClusterSpecSchedulerVolumeClaimTemplates> volumeClaimTemplates) {
    
    this.volumeClaimTemplates = volumeClaimTemplates;
    return this;
  }

  public V1alpha1DaskClusterSpecScheduler addVolumeClaimTemplatesItem(V1alpha1DaskClusterSpecSchedulerVolumeClaimTemplates volumeClaimTemplatesItem) {
    if (this.volumeClaimTemplates == null) {
      this.volumeClaimTemplates = new ArrayList<>();
    }
    this.volumeClaimTemplates.add(volumeClaimTemplatesItem);
    return this;
  }

   /**
   * Get volumeClaimTemplates
   * @return volumeClaimTemplates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1alpha1DaskClusterSpecSchedulerVolumeClaimTemplates> getVolumeClaimTemplates() {
    return volumeClaimTemplates;
  }


  public void setVolumeClaimTemplates(List<V1alpha1DaskClusterSpecSchedulerVolumeClaimTemplates> volumeClaimTemplates) {
    this.volumeClaimTemplates = volumeClaimTemplates;
  }


  public V1alpha1DaskClusterSpecScheduler volumeMounts(List<V1alpha1DaskClusterSpecSchedulerVolumeMounts> volumeMounts) {
    
    this.volumeMounts = volumeMounts;
    return this;
  }

  public V1alpha1DaskClusterSpecScheduler addVolumeMountsItem(V1alpha1DaskClusterSpecSchedulerVolumeMounts volumeMountsItem) {
    if (this.volumeMounts == null) {
      this.volumeMounts = new ArrayList<>();
    }
    this.volumeMounts.add(volumeMountsItem);
    return this;
  }

   /**
   * Get volumeMounts
   * @return volumeMounts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1alpha1DaskClusterSpecSchedulerVolumeMounts> getVolumeMounts() {
    return volumeMounts;
  }


  public void setVolumeMounts(List<V1alpha1DaskClusterSpecSchedulerVolumeMounts> volumeMounts) {
    this.volumeMounts = volumeMounts;
  }


  public V1alpha1DaskClusterSpecScheduler volumes(List<V1alpha1DaskClusterSpecSchedulerVolumes> volumes) {
    
    this.volumes = volumes;
    return this;
  }

  public V1alpha1DaskClusterSpecScheduler addVolumesItem(V1alpha1DaskClusterSpecSchedulerVolumes volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Get volumes
   * @return volumes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1alpha1DaskClusterSpecSchedulerVolumes> getVolumes() {
    return volumes;
  }


  public void setVolumes(List<V1alpha1DaskClusterSpecSchedulerVolumes> volumes) {
    this.volumes = volumes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1DaskClusterSpecScheduler v1alpha1DaskClusterSpecScheduler = (V1alpha1DaskClusterSpecScheduler) o;
    return Objects.equals(this.affinity, v1alpha1DaskClusterSpecScheduler.affinity) &&
        Objects.equals(this.annotations, v1alpha1DaskClusterSpecScheduler.annotations) &&
        Objects.equals(this.initContainers, v1alpha1DaskClusterSpecScheduler.initContainers) &&
        Objects.equals(this.labels, v1alpha1DaskClusterSpecScheduler.labels) &&
        Objects.equals(this.nodeSelector, v1alpha1DaskClusterSpecScheduler.nodeSelector) &&
        Objects.equals(this.resources, v1alpha1DaskClusterSpecScheduler.resources) &&
        Objects.equals(this.tolerations, v1alpha1DaskClusterSpecScheduler.tolerations) &&
        Objects.equals(this.volumeClaimTemplates, v1alpha1DaskClusterSpecScheduler.volumeClaimTemplates) &&
        Objects.equals(this.volumeMounts, v1alpha1DaskClusterSpecScheduler.volumeMounts) &&
        Objects.equals(this.volumes, v1alpha1DaskClusterSpecScheduler.volumes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(affinity, annotations, initContainers, labels, nodeSelector, resources, tolerations, volumeClaimTemplates, volumeMounts, volumes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1DaskClusterSpecScheduler {\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    initContainers: ").append(toIndentedString(initContainers)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("    volumeClaimTemplates: ").append(toIndentedString(volumeClaimTemplates)).append("\n");
    sb.append("    volumeMounts: ").append(toIndentedString(volumeMounts)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

