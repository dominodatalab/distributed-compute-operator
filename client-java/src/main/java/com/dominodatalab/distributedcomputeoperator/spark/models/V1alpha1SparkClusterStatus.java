/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dominodatalab.distributedcomputeoperator.spark.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * V1alpha1SparkClusterStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-04T16:38:59.380Z[Etc/UTC]")
public class V1alpha1SparkClusterStatus {
  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private String image;

  public static final String SERIALIZED_NAME_NODES = "nodes";
  @SerializedName(SERIALIZED_NAME_NODES)
  private List<String> nodes = null;

  public static final String SERIALIZED_NAME_WORKER_REPLICAS = "workerReplicas";
  @SerializedName(SERIALIZED_NAME_WORKER_REPLICAS)
  private Integer workerReplicas;

  public static final String SERIALIZED_NAME_WORKER_SELECTOR = "workerSelector";
  @SerializedName(SERIALIZED_NAME_WORKER_SELECTOR)
  private String workerSelector;


  public V1alpha1SparkClusterStatus image(String image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImage() {
    return image;
  }


  public void setImage(String image) {
    this.image = image;
  }


  public V1alpha1SparkClusterStatus nodes(List<String> nodes) {
    
    this.nodes = nodes;
    return this;
  }

  public V1alpha1SparkClusterStatus addNodesItem(String nodesItem) {
    if (this.nodes == null) {
      this.nodes = new ArrayList<>();
    }
    this.nodes.add(nodesItem);
    return this;
  }

   /**
   * Get nodes
   * @return nodes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getNodes() {
    return nodes;
  }


  public void setNodes(List<String> nodes) {
    this.nodes = nodes;
  }


  public V1alpha1SparkClusterStatus workerReplicas(Integer workerReplicas) {
    
    this.workerReplicas = workerReplicas;
    return this;
  }

   /**
   * Get workerReplicas
   * @return workerReplicas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWorkerReplicas() {
    return workerReplicas;
  }


  public void setWorkerReplicas(Integer workerReplicas) {
    this.workerReplicas = workerReplicas;
  }


  public V1alpha1SparkClusterStatus workerSelector(String workerSelector) {
    
    this.workerSelector = workerSelector;
    return this;
  }

   /**
   * Get workerSelector
   * @return workerSelector
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkerSelector() {
    return workerSelector;
  }


  public void setWorkerSelector(String workerSelector) {
    this.workerSelector = workerSelector;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1SparkClusterStatus v1alpha1SparkClusterStatus = (V1alpha1SparkClusterStatus) o;
    return Objects.equals(this.image, v1alpha1SparkClusterStatus.image) &&
        Objects.equals(this.nodes, v1alpha1SparkClusterStatus.nodes) &&
        Objects.equals(this.workerReplicas, v1alpha1SparkClusterStatus.workerReplicas) &&
        Objects.equals(this.workerSelector, v1alpha1SparkClusterStatus.workerSelector);
  }

  @Override
  public int hashCode() {
    return Objects.hash(image, nodes, workerReplicas, workerSelector);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1SparkClusterStatus {\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    nodes: ").append(toIndentedString(nodes)).append("\n");
    sb.append("    workerReplicas: ").append(toIndentedString(workerReplicas)).append("\n");
    sb.append("    workerSelector: ").append(toIndentedString(workerSelector)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

