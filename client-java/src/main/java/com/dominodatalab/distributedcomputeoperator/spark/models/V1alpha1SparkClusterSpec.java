/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dominodatalab.distributedcomputeoperator.spark.models;

import java.util.Objects;
import java.util.Arrays;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecAutoscaling;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecDriver;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecEnvVars;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecImage;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecImagePullSecrets;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecKerberosKeytab;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecMaster;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecNetworkPolicy;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecPodSecurityContext;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecServiceAccount;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecWorker;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * V1alpha1SparkClusterSpec
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-04T16:38:59.380Z[Etc/UTC]")
public class V1alpha1SparkClusterSpec {
  public static final String SERIALIZED_NAME_AUTOSCALING = "autoscaling";
  @SerializedName(SERIALIZED_NAME_AUTOSCALING)
  private V1alpha1SparkClusterSpecAutoscaling autoscaling;

  public static final String SERIALIZED_NAME_CLUSTER_PORT = "clusterPort";
  @SerializedName(SERIALIZED_NAME_CLUSTER_PORT)
  private Integer clusterPort;

  public static final String SERIALIZED_NAME_DRIVER = "driver";
  @SerializedName(SERIALIZED_NAME_DRIVER)
  private V1alpha1SparkClusterSpecDriver driver;

  public static final String SERIALIZED_NAME_ENV_VARS = "envVars";
  @SerializedName(SERIALIZED_NAME_ENV_VARS)
  private List<V1alpha1SparkClusterSpecEnvVars> envVars = null;

  public static final String SERIALIZED_NAME_ENVOY_FILTER_LABELS = "envoyFilterLabels";
  @SerializedName(SERIALIZED_NAME_ENVOY_FILTER_LABELS)
  private Map<String, String> envoyFilterLabels = null;

  public static final String SERIALIZED_NAME_GLOBAL_LABELS = "globalLabels";
  @SerializedName(SERIALIZED_NAME_GLOBAL_LABELS)
  private Map<String, String> globalLabels = null;

  public static final String SERIALIZED_NAME_IMAGE = "image";
  @SerializedName(SERIALIZED_NAME_IMAGE)
  private V1alpha1SparkClusterSpecImage image;

  public static final String SERIALIZED_NAME_IMAGE_PULL_SECRETS = "imagePullSecrets";
  @SerializedName(SERIALIZED_NAME_IMAGE_PULL_SECRETS)
  private List<V1alpha1SparkClusterSpecImagePullSecrets> imagePullSecrets = null;

  public static final String SERIALIZED_NAME_ISTIO_MUTUAL_T_L_S_MODE = "istioMutualTLSMode";
  @SerializedName(SERIALIZED_NAME_ISTIO_MUTUAL_T_L_S_MODE)
  private String istioMutualTLSMode;

  public static final String SERIALIZED_NAME_KERBEROS_KEYTAB = "kerberosKeytab";
  @SerializedName(SERIALIZED_NAME_KERBEROS_KEYTAB)
  private V1alpha1SparkClusterSpecKerberosKeytab kerberosKeytab;

  public static final String SERIALIZED_NAME_MASTER = "master";
  @SerializedName(SERIALIZED_NAME_MASTER)
  private V1alpha1SparkClusterSpecMaster master;

  public static final String SERIALIZED_NAME_MASTER_WEB_PORT = "masterWebPort";
  @SerializedName(SERIALIZED_NAME_MASTER_WEB_PORT)
  private Integer masterWebPort;

  public static final String SERIALIZED_NAME_NETWORK_POLICY = "networkPolicy";
  @SerializedName(SERIALIZED_NAME_NETWORK_POLICY)
  private V1alpha1SparkClusterSpecNetworkPolicy networkPolicy;

  public static final String SERIALIZED_NAME_POD_SECURITY_CONTEXT = "podSecurityContext";
  @SerializedName(SERIALIZED_NAME_POD_SECURITY_CONTEXT)
  private V1alpha1SparkClusterSpecPodSecurityContext podSecurityContext;

  public static final String SERIALIZED_NAME_POD_SECURITY_POLICY = "podSecurityPolicy";
  @SerializedName(SERIALIZED_NAME_POD_SECURITY_POLICY)
  private String podSecurityPolicy;

  public static final String SERIALIZED_NAME_SERVICE_ACCOUNT = "serviceAccount";
  @SerializedName(SERIALIZED_NAME_SERVICE_ACCOUNT)
  private V1alpha1SparkClusterSpecServiceAccount serviceAccount;

  public static final String SERIALIZED_NAME_WORKER = "worker";
  @SerializedName(SERIALIZED_NAME_WORKER)
  private V1alpha1SparkClusterSpecWorker worker;

  public static final String SERIALIZED_NAME_WORKER_MEMORY_LIMIT = "workerMemoryLimit";
  @SerializedName(SERIALIZED_NAME_WORKER_MEMORY_LIMIT)
  private String workerMemoryLimit;

  public static final String SERIALIZED_NAME_WORKER_WEB_PORT = "workerWebPort";
  @SerializedName(SERIALIZED_NAME_WORKER_WEB_PORT)
  private Integer workerWebPort;


  public V1alpha1SparkClusterSpec autoscaling(V1alpha1SparkClusterSpecAutoscaling autoscaling) {
    
    this.autoscaling = autoscaling;
    return this;
  }

   /**
   * Get autoscaling
   * @return autoscaling
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecAutoscaling getAutoscaling() {
    return autoscaling;
  }


  public void setAutoscaling(V1alpha1SparkClusterSpecAutoscaling autoscaling) {
    this.autoscaling = autoscaling;
  }


  public V1alpha1SparkClusterSpec clusterPort(Integer clusterPort) {
    
    this.clusterPort = clusterPort;
    return this;
  }

   /**
   * Get clusterPort
   * @return clusterPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getClusterPort() {
    return clusterPort;
  }


  public void setClusterPort(Integer clusterPort) {
    this.clusterPort = clusterPort;
  }


  public V1alpha1SparkClusterSpec driver(V1alpha1SparkClusterSpecDriver driver) {
    
    this.driver = driver;
    return this;
  }

   /**
   * Get driver
   * @return driver
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecDriver getDriver() {
    return driver;
  }


  public void setDriver(V1alpha1SparkClusterSpecDriver driver) {
    this.driver = driver;
  }


  public V1alpha1SparkClusterSpec envVars(List<V1alpha1SparkClusterSpecEnvVars> envVars) {
    
    this.envVars = envVars;
    return this;
  }

  public V1alpha1SparkClusterSpec addEnvVarsItem(V1alpha1SparkClusterSpecEnvVars envVarsItem) {
    if (this.envVars == null) {
      this.envVars = new ArrayList<>();
    }
    this.envVars.add(envVarsItem);
    return this;
  }

   /**
   * Get envVars
   * @return envVars
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1alpha1SparkClusterSpecEnvVars> getEnvVars() {
    return envVars;
  }


  public void setEnvVars(List<V1alpha1SparkClusterSpecEnvVars> envVars) {
    this.envVars = envVars;
  }


  public V1alpha1SparkClusterSpec envoyFilterLabels(Map<String, String> envoyFilterLabels) {
    
    this.envoyFilterLabels = envoyFilterLabels;
    return this;
  }

  public V1alpha1SparkClusterSpec putEnvoyFilterLabelsItem(String key, String envoyFilterLabelsItem) {
    if (this.envoyFilterLabels == null) {
      this.envoyFilterLabels = new HashMap<>();
    }
    this.envoyFilterLabels.put(key, envoyFilterLabelsItem);
    return this;
  }

   /**
   * Get envoyFilterLabels
   * @return envoyFilterLabels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getEnvoyFilterLabels() {
    return envoyFilterLabels;
  }


  public void setEnvoyFilterLabels(Map<String, String> envoyFilterLabels) {
    this.envoyFilterLabels = envoyFilterLabels;
  }


  public V1alpha1SparkClusterSpec globalLabels(Map<String, String> globalLabels) {
    
    this.globalLabels = globalLabels;
    return this;
  }

  public V1alpha1SparkClusterSpec putGlobalLabelsItem(String key, String globalLabelsItem) {
    if (this.globalLabels == null) {
      this.globalLabels = new HashMap<>();
    }
    this.globalLabels.put(key, globalLabelsItem);
    return this;
  }

   /**
   * Get globalLabels
   * @return globalLabels
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, String> getGlobalLabels() {
    return globalLabels;
  }


  public void setGlobalLabels(Map<String, String> globalLabels) {
    this.globalLabels = globalLabels;
  }


  public V1alpha1SparkClusterSpec image(V1alpha1SparkClusterSpecImage image) {
    
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecImage getImage() {
    return image;
  }


  public void setImage(V1alpha1SparkClusterSpecImage image) {
    this.image = image;
  }


  public V1alpha1SparkClusterSpec imagePullSecrets(List<V1alpha1SparkClusterSpecImagePullSecrets> imagePullSecrets) {
    
    this.imagePullSecrets = imagePullSecrets;
    return this;
  }

  public V1alpha1SparkClusterSpec addImagePullSecretsItem(V1alpha1SparkClusterSpecImagePullSecrets imagePullSecretsItem) {
    if (this.imagePullSecrets == null) {
      this.imagePullSecrets = new ArrayList<>();
    }
    this.imagePullSecrets.add(imagePullSecretsItem);
    return this;
  }

   /**
   * Get imagePullSecrets
   * @return imagePullSecrets
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<V1alpha1SparkClusterSpecImagePullSecrets> getImagePullSecrets() {
    return imagePullSecrets;
  }


  public void setImagePullSecrets(List<V1alpha1SparkClusterSpecImagePullSecrets> imagePullSecrets) {
    this.imagePullSecrets = imagePullSecrets;
  }


  public V1alpha1SparkClusterSpec istioMutualTLSMode(String istioMutualTLSMode) {
    
    this.istioMutualTLSMode = istioMutualTLSMode;
    return this;
  }

   /**
   * Get istioMutualTLSMode
   * @return istioMutualTLSMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIstioMutualTLSMode() {
    return istioMutualTLSMode;
  }


  public void setIstioMutualTLSMode(String istioMutualTLSMode) {
    this.istioMutualTLSMode = istioMutualTLSMode;
  }


  public V1alpha1SparkClusterSpec kerberosKeytab(V1alpha1SparkClusterSpecKerberosKeytab kerberosKeytab) {
    
    this.kerberosKeytab = kerberosKeytab;
    return this;
  }

   /**
   * Get kerberosKeytab
   * @return kerberosKeytab
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecKerberosKeytab getKerberosKeytab() {
    return kerberosKeytab;
  }


  public void setKerberosKeytab(V1alpha1SparkClusterSpecKerberosKeytab kerberosKeytab) {
    this.kerberosKeytab = kerberosKeytab;
  }


  public V1alpha1SparkClusterSpec master(V1alpha1SparkClusterSpecMaster master) {
    
    this.master = master;
    return this;
  }

   /**
   * Get master
   * @return master
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecMaster getMaster() {
    return master;
  }


  public void setMaster(V1alpha1SparkClusterSpecMaster master) {
    this.master = master;
  }


  public V1alpha1SparkClusterSpec masterWebPort(Integer masterWebPort) {
    
    this.masterWebPort = masterWebPort;
    return this;
  }

   /**
   * Get masterWebPort
   * @return masterWebPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMasterWebPort() {
    return masterWebPort;
  }


  public void setMasterWebPort(Integer masterWebPort) {
    this.masterWebPort = masterWebPort;
  }


  public V1alpha1SparkClusterSpec networkPolicy(V1alpha1SparkClusterSpecNetworkPolicy networkPolicy) {
    
    this.networkPolicy = networkPolicy;
    return this;
  }

   /**
   * Get networkPolicy
   * @return networkPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecNetworkPolicy getNetworkPolicy() {
    return networkPolicy;
  }


  public void setNetworkPolicy(V1alpha1SparkClusterSpecNetworkPolicy networkPolicy) {
    this.networkPolicy = networkPolicy;
  }


  public V1alpha1SparkClusterSpec podSecurityContext(V1alpha1SparkClusterSpecPodSecurityContext podSecurityContext) {
    
    this.podSecurityContext = podSecurityContext;
    return this;
  }

   /**
   * Get podSecurityContext
   * @return podSecurityContext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecPodSecurityContext getPodSecurityContext() {
    return podSecurityContext;
  }


  public void setPodSecurityContext(V1alpha1SparkClusterSpecPodSecurityContext podSecurityContext) {
    this.podSecurityContext = podSecurityContext;
  }


  public V1alpha1SparkClusterSpec podSecurityPolicy(String podSecurityPolicy) {
    
    this.podSecurityPolicy = podSecurityPolicy;
    return this;
  }

   /**
   * Get podSecurityPolicy
   * @return podSecurityPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPodSecurityPolicy() {
    return podSecurityPolicy;
  }


  public void setPodSecurityPolicy(String podSecurityPolicy) {
    this.podSecurityPolicy = podSecurityPolicy;
  }


  public V1alpha1SparkClusterSpec serviceAccount(V1alpha1SparkClusterSpecServiceAccount serviceAccount) {
    
    this.serviceAccount = serviceAccount;
    return this;
  }

   /**
   * Get serviceAccount
   * @return serviceAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecServiceAccount getServiceAccount() {
    return serviceAccount;
  }


  public void setServiceAccount(V1alpha1SparkClusterSpecServiceAccount serviceAccount) {
    this.serviceAccount = serviceAccount;
  }


  public V1alpha1SparkClusterSpec worker(V1alpha1SparkClusterSpecWorker worker) {
    
    this.worker = worker;
    return this;
  }

   /**
   * Get worker
   * @return worker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecWorker getWorker() {
    return worker;
  }


  public void setWorker(V1alpha1SparkClusterSpecWorker worker) {
    this.worker = worker;
  }


  public V1alpha1SparkClusterSpec workerMemoryLimit(String workerMemoryLimit) {
    
    this.workerMemoryLimit = workerMemoryLimit;
    return this;
  }

   /**
   * Get workerMemoryLimit
   * @return workerMemoryLimit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkerMemoryLimit() {
    return workerMemoryLimit;
  }


  public void setWorkerMemoryLimit(String workerMemoryLimit) {
    this.workerMemoryLimit = workerMemoryLimit;
  }


  public V1alpha1SparkClusterSpec workerWebPort(Integer workerWebPort) {
    
    this.workerWebPort = workerWebPort;
    return this;
  }

   /**
   * Get workerWebPort
   * @return workerWebPort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWorkerWebPort() {
    return workerWebPort;
  }


  public void setWorkerWebPort(Integer workerWebPort) {
    this.workerWebPort = workerWebPort;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1SparkClusterSpec v1alpha1SparkClusterSpec = (V1alpha1SparkClusterSpec) o;
    return Objects.equals(this.autoscaling, v1alpha1SparkClusterSpec.autoscaling) &&
        Objects.equals(this.clusterPort, v1alpha1SparkClusterSpec.clusterPort) &&
        Objects.equals(this.driver, v1alpha1SparkClusterSpec.driver) &&
        Objects.equals(this.envVars, v1alpha1SparkClusterSpec.envVars) &&
        Objects.equals(this.envoyFilterLabels, v1alpha1SparkClusterSpec.envoyFilterLabels) &&
        Objects.equals(this.globalLabels, v1alpha1SparkClusterSpec.globalLabels) &&
        Objects.equals(this.image, v1alpha1SparkClusterSpec.image) &&
        Objects.equals(this.imagePullSecrets, v1alpha1SparkClusterSpec.imagePullSecrets) &&
        Objects.equals(this.istioMutualTLSMode, v1alpha1SparkClusterSpec.istioMutualTLSMode) &&
        Objects.equals(this.kerberosKeytab, v1alpha1SparkClusterSpec.kerberosKeytab) &&
        Objects.equals(this.master, v1alpha1SparkClusterSpec.master) &&
        Objects.equals(this.masterWebPort, v1alpha1SparkClusterSpec.masterWebPort) &&
        Objects.equals(this.networkPolicy, v1alpha1SparkClusterSpec.networkPolicy) &&
        Objects.equals(this.podSecurityContext, v1alpha1SparkClusterSpec.podSecurityContext) &&
        Objects.equals(this.podSecurityPolicy, v1alpha1SparkClusterSpec.podSecurityPolicy) &&
        Objects.equals(this.serviceAccount, v1alpha1SparkClusterSpec.serviceAccount) &&
        Objects.equals(this.worker, v1alpha1SparkClusterSpec.worker) &&
        Objects.equals(this.workerMemoryLimit, v1alpha1SparkClusterSpec.workerMemoryLimit) &&
        Objects.equals(this.workerWebPort, v1alpha1SparkClusterSpec.workerWebPort);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoscaling, clusterPort, driver, envVars, envoyFilterLabels, globalLabels, image, imagePullSecrets, istioMutualTLSMode, kerberosKeytab, master, masterWebPort, networkPolicy, podSecurityContext, podSecurityPolicy, serviceAccount, worker, workerMemoryLimit, workerWebPort);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1SparkClusterSpec {\n");
    sb.append("    autoscaling: ").append(toIndentedString(autoscaling)).append("\n");
    sb.append("    clusterPort: ").append(toIndentedString(clusterPort)).append("\n");
    sb.append("    driver: ").append(toIndentedString(driver)).append("\n");
    sb.append("    envVars: ").append(toIndentedString(envVars)).append("\n");
    sb.append("    envoyFilterLabels: ").append(toIndentedString(envoyFilterLabels)).append("\n");
    sb.append("    globalLabels: ").append(toIndentedString(globalLabels)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    imagePullSecrets: ").append(toIndentedString(imagePullSecrets)).append("\n");
    sb.append("    istioMutualTLSMode: ").append(toIndentedString(istioMutualTLSMode)).append("\n");
    sb.append("    kerberosKeytab: ").append(toIndentedString(kerberosKeytab)).append("\n");
    sb.append("    master: ").append(toIndentedString(master)).append("\n");
    sb.append("    masterWebPort: ").append(toIndentedString(masterWebPort)).append("\n");
    sb.append("    networkPolicy: ").append(toIndentedString(networkPolicy)).append("\n");
    sb.append("    podSecurityContext: ").append(toIndentedString(podSecurityContext)).append("\n");
    sb.append("    podSecurityPolicy: ").append(toIndentedString(podSecurityPolicy)).append("\n");
    sb.append("    serviceAccount: ").append(toIndentedString(serviceAccount)).append("\n");
    sb.append("    worker: ").append(toIndentedString(worker)).append("\n");
    sb.append("    workerMemoryLimit: ").append(toIndentedString(workerMemoryLimit)).append("\n");
    sb.append("    workerWebPort: ").append(toIndentedString(workerWebPort)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

