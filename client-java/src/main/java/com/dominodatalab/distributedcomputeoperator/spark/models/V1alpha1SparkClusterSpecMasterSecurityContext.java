/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.dominodatalab.distributedcomputeoperator.spark.models;

import java.util.Objects;
import java.util.Arrays;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecMasterSecurityContextCapabilities;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecMasterSecurityContextSeLinuxOptions;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecMasterSecurityContextSeccompProfile;
import com.dominodatalab.distributedcomputeoperator.spark.models.V1alpha1SparkClusterSpecMasterSecurityContextWindowsOptions;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * V1alpha1SparkClusterSpecMasterSecurityContext
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-04T16:38:59.380Z[Etc/UTC]")
public class V1alpha1SparkClusterSpecMasterSecurityContext {
  public static final String SERIALIZED_NAME_ALLOW_PRIVILEGE_ESCALATION = "allowPrivilegeEscalation";
  @SerializedName(SERIALIZED_NAME_ALLOW_PRIVILEGE_ESCALATION)
  private Boolean allowPrivilegeEscalation;

  public static final String SERIALIZED_NAME_CAPABILITIES = "capabilities";
  @SerializedName(SERIALIZED_NAME_CAPABILITIES)
  private V1alpha1SparkClusterSpecMasterSecurityContextCapabilities capabilities;

  public static final String SERIALIZED_NAME_PRIVILEGED = "privileged";
  @SerializedName(SERIALIZED_NAME_PRIVILEGED)
  private Boolean privileged;

  public static final String SERIALIZED_NAME_PROC_MOUNT = "procMount";
  @SerializedName(SERIALIZED_NAME_PROC_MOUNT)
  private String procMount;

  public static final String SERIALIZED_NAME_READ_ONLY_ROOT_FILESYSTEM = "readOnlyRootFilesystem";
  @SerializedName(SERIALIZED_NAME_READ_ONLY_ROOT_FILESYSTEM)
  private Boolean readOnlyRootFilesystem;

  public static final String SERIALIZED_NAME_RUN_AS_GROUP = "runAsGroup";
  @SerializedName(SERIALIZED_NAME_RUN_AS_GROUP)
  private Long runAsGroup;

  public static final String SERIALIZED_NAME_RUN_AS_NON_ROOT = "runAsNonRoot";
  @SerializedName(SERIALIZED_NAME_RUN_AS_NON_ROOT)
  private Boolean runAsNonRoot;

  public static final String SERIALIZED_NAME_RUN_AS_USER = "runAsUser";
  @SerializedName(SERIALIZED_NAME_RUN_AS_USER)
  private Long runAsUser;

  public static final String SERIALIZED_NAME_SE_LINUX_OPTIONS = "seLinuxOptions";
  @SerializedName(SERIALIZED_NAME_SE_LINUX_OPTIONS)
  private V1alpha1SparkClusterSpecMasterSecurityContextSeLinuxOptions seLinuxOptions;

  public static final String SERIALIZED_NAME_SECCOMP_PROFILE = "seccompProfile";
  @SerializedName(SERIALIZED_NAME_SECCOMP_PROFILE)
  private V1alpha1SparkClusterSpecMasterSecurityContextSeccompProfile seccompProfile;

  public static final String SERIALIZED_NAME_WINDOWS_OPTIONS = "windowsOptions";
  @SerializedName(SERIALIZED_NAME_WINDOWS_OPTIONS)
  private V1alpha1SparkClusterSpecMasterSecurityContextWindowsOptions windowsOptions;


  public V1alpha1SparkClusterSpecMasterSecurityContext allowPrivilegeEscalation(Boolean allowPrivilegeEscalation) {
    
    this.allowPrivilegeEscalation = allowPrivilegeEscalation;
    return this;
  }

   /**
   * Get allowPrivilegeEscalation
   * @return allowPrivilegeEscalation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowPrivilegeEscalation() {
    return allowPrivilegeEscalation;
  }


  public void setAllowPrivilegeEscalation(Boolean allowPrivilegeEscalation) {
    this.allowPrivilegeEscalation = allowPrivilegeEscalation;
  }


  public V1alpha1SparkClusterSpecMasterSecurityContext capabilities(V1alpha1SparkClusterSpecMasterSecurityContextCapabilities capabilities) {
    
    this.capabilities = capabilities;
    return this;
  }

   /**
   * Get capabilities
   * @return capabilities
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecMasterSecurityContextCapabilities getCapabilities() {
    return capabilities;
  }


  public void setCapabilities(V1alpha1SparkClusterSpecMasterSecurityContextCapabilities capabilities) {
    this.capabilities = capabilities;
  }


  public V1alpha1SparkClusterSpecMasterSecurityContext privileged(Boolean privileged) {
    
    this.privileged = privileged;
    return this;
  }

   /**
   * Get privileged
   * @return privileged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getPrivileged() {
    return privileged;
  }


  public void setPrivileged(Boolean privileged) {
    this.privileged = privileged;
  }


  public V1alpha1SparkClusterSpecMasterSecurityContext procMount(String procMount) {
    
    this.procMount = procMount;
    return this;
  }

   /**
   * Get procMount
   * @return procMount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProcMount() {
    return procMount;
  }


  public void setProcMount(String procMount) {
    this.procMount = procMount;
  }


  public V1alpha1SparkClusterSpecMasterSecurityContext readOnlyRootFilesystem(Boolean readOnlyRootFilesystem) {
    
    this.readOnlyRootFilesystem = readOnlyRootFilesystem;
    return this;
  }

   /**
   * Get readOnlyRootFilesystem
   * @return readOnlyRootFilesystem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getReadOnlyRootFilesystem() {
    return readOnlyRootFilesystem;
  }


  public void setReadOnlyRootFilesystem(Boolean readOnlyRootFilesystem) {
    this.readOnlyRootFilesystem = readOnlyRootFilesystem;
  }


  public V1alpha1SparkClusterSpecMasterSecurityContext runAsGroup(Long runAsGroup) {
    
    this.runAsGroup = runAsGroup;
    return this;
  }

   /**
   * Get runAsGroup
   * @return runAsGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getRunAsGroup() {
    return runAsGroup;
  }


  public void setRunAsGroup(Long runAsGroup) {
    this.runAsGroup = runAsGroup;
  }


  public V1alpha1SparkClusterSpecMasterSecurityContext runAsNonRoot(Boolean runAsNonRoot) {
    
    this.runAsNonRoot = runAsNonRoot;
    return this;
  }

   /**
   * Get runAsNonRoot
   * @return runAsNonRoot
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getRunAsNonRoot() {
    return runAsNonRoot;
  }


  public void setRunAsNonRoot(Boolean runAsNonRoot) {
    this.runAsNonRoot = runAsNonRoot;
  }


  public V1alpha1SparkClusterSpecMasterSecurityContext runAsUser(Long runAsUser) {
    
    this.runAsUser = runAsUser;
    return this;
  }

   /**
   * Get runAsUser
   * @return runAsUser
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getRunAsUser() {
    return runAsUser;
  }


  public void setRunAsUser(Long runAsUser) {
    this.runAsUser = runAsUser;
  }


  public V1alpha1SparkClusterSpecMasterSecurityContext seLinuxOptions(V1alpha1SparkClusterSpecMasterSecurityContextSeLinuxOptions seLinuxOptions) {
    
    this.seLinuxOptions = seLinuxOptions;
    return this;
  }

   /**
   * Get seLinuxOptions
   * @return seLinuxOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecMasterSecurityContextSeLinuxOptions getSeLinuxOptions() {
    return seLinuxOptions;
  }


  public void setSeLinuxOptions(V1alpha1SparkClusterSpecMasterSecurityContextSeLinuxOptions seLinuxOptions) {
    this.seLinuxOptions = seLinuxOptions;
  }


  public V1alpha1SparkClusterSpecMasterSecurityContext seccompProfile(V1alpha1SparkClusterSpecMasterSecurityContextSeccompProfile seccompProfile) {
    
    this.seccompProfile = seccompProfile;
    return this;
  }

   /**
   * Get seccompProfile
   * @return seccompProfile
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecMasterSecurityContextSeccompProfile getSeccompProfile() {
    return seccompProfile;
  }


  public void setSeccompProfile(V1alpha1SparkClusterSpecMasterSecurityContextSeccompProfile seccompProfile) {
    this.seccompProfile = seccompProfile;
  }


  public V1alpha1SparkClusterSpecMasterSecurityContext windowsOptions(V1alpha1SparkClusterSpecMasterSecurityContextWindowsOptions windowsOptions) {
    
    this.windowsOptions = windowsOptions;
    return this;
  }

   /**
   * Get windowsOptions
   * @return windowsOptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1alpha1SparkClusterSpecMasterSecurityContextWindowsOptions getWindowsOptions() {
    return windowsOptions;
  }


  public void setWindowsOptions(V1alpha1SparkClusterSpecMasterSecurityContextWindowsOptions windowsOptions) {
    this.windowsOptions = windowsOptions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1SparkClusterSpecMasterSecurityContext v1alpha1SparkClusterSpecMasterSecurityContext = (V1alpha1SparkClusterSpecMasterSecurityContext) o;
    return Objects.equals(this.allowPrivilegeEscalation, v1alpha1SparkClusterSpecMasterSecurityContext.allowPrivilegeEscalation) &&
        Objects.equals(this.capabilities, v1alpha1SparkClusterSpecMasterSecurityContext.capabilities) &&
        Objects.equals(this.privileged, v1alpha1SparkClusterSpecMasterSecurityContext.privileged) &&
        Objects.equals(this.procMount, v1alpha1SparkClusterSpecMasterSecurityContext.procMount) &&
        Objects.equals(this.readOnlyRootFilesystem, v1alpha1SparkClusterSpecMasterSecurityContext.readOnlyRootFilesystem) &&
        Objects.equals(this.runAsGroup, v1alpha1SparkClusterSpecMasterSecurityContext.runAsGroup) &&
        Objects.equals(this.runAsNonRoot, v1alpha1SparkClusterSpecMasterSecurityContext.runAsNonRoot) &&
        Objects.equals(this.runAsUser, v1alpha1SparkClusterSpecMasterSecurityContext.runAsUser) &&
        Objects.equals(this.seLinuxOptions, v1alpha1SparkClusterSpecMasterSecurityContext.seLinuxOptions) &&
        Objects.equals(this.seccompProfile, v1alpha1SparkClusterSpecMasterSecurityContext.seccompProfile) &&
        Objects.equals(this.windowsOptions, v1alpha1SparkClusterSpecMasterSecurityContext.windowsOptions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowPrivilegeEscalation, capabilities, privileged, procMount, readOnlyRootFilesystem, runAsGroup, runAsNonRoot, runAsUser, seLinuxOptions, seccompProfile, windowsOptions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1SparkClusterSpecMasterSecurityContext {\n");
    sb.append("    allowPrivilegeEscalation: ").append(toIndentedString(allowPrivilegeEscalation)).append("\n");
    sb.append("    capabilities: ").append(toIndentedString(capabilities)).append("\n");
    sb.append("    privileged: ").append(toIndentedString(privileged)).append("\n");
    sb.append("    procMount: ").append(toIndentedString(procMount)).append("\n");
    sb.append("    readOnlyRootFilesystem: ").append(toIndentedString(readOnlyRootFilesystem)).append("\n");
    sb.append("    runAsGroup: ").append(toIndentedString(runAsGroup)).append("\n");
    sb.append("    runAsNonRoot: ").append(toIndentedString(runAsNonRoot)).append("\n");
    sb.append("    runAsUser: ").append(toIndentedString(runAsUser)).append("\n");
    sb.append("    seLinuxOptions: ").append(toIndentedString(seLinuxOptions)).append("\n");
    sb.append("    seccompProfile: ").append(toIndentedString(seccompProfile)).append("\n");
    sb.append("    windowsOptions: ").append(toIndentedString(windowsOptions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

